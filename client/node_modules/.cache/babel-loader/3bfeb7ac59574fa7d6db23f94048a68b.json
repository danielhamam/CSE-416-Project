{"ast":null,"code":"var _jsxFileName = \"/Users/danielhamam/Desktop/Computer_Programming/Broncos_Project/client/src/components/homePage/Main Panel/DistrictingPlans/YourDistrictingPlans.js\";\nimport React, { Component } from 'react';\nimport DistrictPlan from './DistrictPlan'; // This class represents the list of Jobs. This will handle \"currently selected Job\" and \n// generally manage the jobs. \n\nclass YourDistrictingPlans extends Component {\n  constructor() {\n    super();\n\n    this.receiveDistricts = () => {\n      if (this.props.currentJob != \"\") {\n        return this.props.currentJob.districts.map(district => /*#__PURE__*/React.createElement(DistrictPlan, {\n          type: district.type,\n          selectedPlanCheck: this.props.selectedPlanCheck,\n          toggleSelectedPlanCheck: this.props.toggleSelectedPlanCheck,\n          currentJob: this.props.currntJob,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 17\n          }\n        }));\n      }\n    };\n\n    this.state = {\n      title: \"No Job Selected\",\n      jobSelected: false\n    };\n  }\n\n  render() {\n    if (this.props.currentJob == \"\" && this.state.title != \"No Job Selected\") {\n      this.setState({\n        title: \"No Job Selected\"\n      }); // if there is no job, then title is \"No Job Selected: \"\n    } else if (this.props.currentJob != \"\" && this.state.title != this.props.currentJob.jobName) {\n      this.setState({\n        title: this.props.currentJob.jobName\n      });\n    }\n\n    return (\n      /*#__PURE__*/\n      // Passing in parent variables to keep track of selection (so no more than 1 can be selected at once)\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }\n      }, \" Selected Plan: \"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }\n      }, \" \", this.state.title, \": \"), this.receiveDistricts()))\n    );\n  }\n\n}\n\nexport default YourDistrictingPlans;","map":{"version":3,"sources":["/Users/danielhamam/Desktop/Computer_Programming/Broncos_Project/client/src/components/homePage/Main Panel/DistrictingPlans/YourDistrictingPlans.js"],"names":["React","Component","DistrictPlan","YourDistrictingPlans","constructor","receiveDistricts","props","currentJob","districts","map","district","type","selectedPlanCheck","toggleSelectedPlanCheck","currntJob","state","title","jobSelected","render","setState","jobName"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,YAAP,MAAyB,gBAAzB,C,CAEA;AACA;;AAEA,MAAMC,oBAAN,SAAmCF,SAAnC,CAA6C;AACzCG,EAAAA,WAAW,GAAI;AACX;;AADW,SAQfC,gBARe,GAQI,MAAM;AAErB,UAAI,KAAKC,KAAL,CAAWC,UAAX,IAAyB,EAA7B,EAAiC;AAC7B,eAAO,KAAKD,KAAL,CAAWC,UAAX,CAAsBC,SAAtB,CAAgCC,GAAhC,CAAsCC,QAAD,iBACxC,oBAAC,YAAD;AAAc,UAAA,IAAI,EAAEA,QAAQ,CAACC,IAA7B;AAAmC,UAAA,iBAAiB,EAAE,KAAKL,KAAL,CAAWM,iBAAjE;AACA,UAAA,uBAAuB,EAAE,KAAKN,KAAL,CAAWO,uBADpC;AAC6D,UAAA,UAAU,EAAE,KAAKP,KAAL,CAAWQ,SADpF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADG,CAAP;AAIH;AACJ,KAhBc;;AAEX,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,iBADE;AAETC,MAAAA,WAAW,EAAG;AAFL,KAAb;AAIH;;AAYDC,EAAAA,MAAM,GAAG;AAEL,QAAI,KAAKZ,KAAL,CAAWC,UAAX,IAAyB,EAAzB,IAA+B,KAAKQ,KAAL,CAAWC,KAAX,IAAoB,iBAAvD,EAA0E;AACtE,WAAKG,QAAL,CAAc;AAACH,QAAAA,KAAK,EAAG;AAAT,OAAd,EADsE,CAC1B;AAC/C,KAFD,MAGK,IAAI,KAAKV,KAAL,CAAWC,UAAX,IAAyB,EAAzB,IAA+B,KAAKQ,KAAL,CAAWC,KAAX,IAAoB,KAAKV,KAAL,CAAWC,UAAX,CAAsBa,OAA7E,EAAsF;AACvF,WAAKD,QAAL,CAAc;AAACH,QAAAA,KAAK,EAAG,KAAKV,KAAL,CAAWC,UAAX,CAAsBa;AAA/B,OAAd;AACH;;AAED;AAAA;AACI;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFR,eAGQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHR,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAO,KAAKL,KAAL,CAAWC,KAAlB,OAJJ,EAMK,KAAKX,gBAAL,EANL,CADJ;AAFJ;AAmBH;;AA/CwC;;AAkD7C,eAAeF,oBAAf","sourcesContent":["import React, {Component} from 'react';\nimport DistrictPlan from './DistrictPlan';\n\n// This class represents the list of Jobs. This will handle \"currently selected Job\" and \n// generally manage the jobs. \n\nclass YourDistrictingPlans extends Component {\n    constructor () {\n        super();\n        this.state = {\n            title: \"No Job Selected\",\n            jobSelected : false\n        }\n    }\n\n    receiveDistricts = () => {\n\n        if (this.props.currentJob != \"\") {\n            return this.props.currentJob.districts.map( (district) => \n                <DistrictPlan type={district.type} selectedPlanCheck={this.props.selectedPlanCheck} \n                toggleSelectedPlanCheck={this.props.toggleSelectedPlanCheck} currentJob={this.props.currntJob}\n                /> )\n        }\n    }\n\n    render() {\n\n        if (this.props.currentJob == \"\" && this.state.title != \"No Job Selected\") {\n            this.setState({title : \"No Job Selected\"}); // if there is no job, then title is \"No Job Selected: \"\n        } \n        else if (this.props.currentJob != \"\" && this.state.title != this.props.currentJob.jobName) {\n            this.setState({title : this.props.currentJob.jobName});\n        }\n\n        return (\n            // Passing in parent variables to keep track of selection (so no more than 1 can be selected at once)\n            <div>\n                <ul> \n                    <div> Selected Plan: </div> \n                        <br></br>\n                        <br></br>\n                    <div> {this.state.title}: </div>\n\n                    {this.receiveDistricts()}\n\n                    {/* <DistrictPlan selectedPlanCheck={this.props.selectedPlanCheck} toggleSelectedPlanCheck={this.props.toggleSelectedPlanCheck} />\n                    <DistrictPlan selectedPlanCheck={this.props.selectedPlanCheck} toggleSelectedPlanCheck={this.props.toggleSelectedPlanCheck} />\n                    <DistrictPlan selectedPlanCheck={this.props.selectedPlanCheck} toggleSelectedPlanCheck={this.props.toggleSelectedPlanCheck} /> */}\n\n                </ul>\n            </div>\n            \n        );\n    }\n}\n\nexport default YourDistrictingPlans;"]},"metadata":{},"sourceType":"module"}