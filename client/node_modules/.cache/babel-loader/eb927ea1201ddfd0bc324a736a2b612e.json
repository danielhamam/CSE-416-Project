{"ast":null,"code":"import fetch from 'unfetch';\n\nconst checkStatus = response => {\n  if (response.ok) {\n    return response;\n  } else {\n    let error = new Error(response.statusText);\n    error.response = response;\n    response.json().then(e => {\n      error.error = e;\n    });\n    return Promise.reject(error);\n  }\n};\n\nexport const generateBatch = arg => {\n  console.log(arg);\n  fetch('/home', {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'POST',\n    body: JSON.stringify(arg)\n  }).then(checkStatus);\n};\nexport const getState = arg => {\n  fetch('/home', {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'GET',\n    body: JSON.stringify(arg)\n  }).then(checkStatus);\n};","map":{"version":3,"sources":["/Users/carloslopez/Desktop/SCHOOL/ComputerScience/CSE416/CSE-416-Project/client/src/endpoint/client.js"],"names":["fetch","checkStatus","response","ok","error","Error","statusText","json","then","e","Promise","reject","generateBatch","arg","console","log","headers","method","body","JSON","stringify","getState"],"mappings":"AACA,OAAOA,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,WAAW,GAAGC,QAAQ,IAAI;AAC5B,MAAIA,QAAQ,CAACC,EAAb,EAAiB;AACb,WAAOD,QAAP;AACH,GAFD,MAEO;AACH,QAAIE,KAAK,GAAG,IAAIC,KAAJ,CAAUH,QAAQ,CAACI,UAAnB,CAAZ;AACAF,IAAAA,KAAK,CAACF,QAAN,GAAiBA,QAAjB;AACAA,IAAAA,QAAQ,CAACK,IAAT,GAAgBC,IAAhB,CAAqBC,CAAC,IAAI;AACtBL,MAAAA,KAAK,CAACA,KAAN,GAAcK,CAAd;AACH,KAFD;AAGA,WAAOC,OAAO,CAACC,MAAR,CAAeP,KAAf,CAAP;AACH;AACJ,CAXD;;AAcA,OAAO,MAAMQ,aAAa,GAAIC,GAAD,IAAQ;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAb,EAAAA,KAAK,CAAC,OAAD,EAAU;AACXgB,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KADE;AAIXC,IAAAA,MAAM,EAAE,MAJG;AAKXC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,GAAf;AALK,GAAV,CAAL,CAOCL,IAPD,CAOMP,WAPN;AAQH,CAVM;AAYP,OAAO,MAAMoB,QAAQ,GAAIR,GAAD,IAAQ;AAC5Bb,EAAAA,KAAK,CAAC,OAAD,EAAU;AACXgB,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KADE;AAIXC,IAAAA,MAAM,EAAE,KAJG;AAKXC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,GAAf;AALK,GAAV,CAAL,CAOCL,IAPD,CAOMP,WAPN;AAQH,CATM","sourcesContent":["\nimport fetch from 'unfetch';\n\nconst checkStatus = response => {\n    if (response.ok) {\n        return response;\n    } else {\n        let error = new Error(response.statusText);\n        error.response = response;\n        response.json().then(e => {\n            error.error = e;\n        });\n        return Promise.reject(error);\n    }\n}\n\n\nexport const generateBatch = (arg) =>{\n    console.log(arg)\n    fetch('/home', {\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify(arg)\n    })\n    .then(checkStatus);\n}\n\nexport const getState = (arg) =>{\n    fetch('/home', {\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        method: 'GET',\n        body: JSON.stringify(arg)\n    })\n    .then(checkStatus);\n}"]},"metadata":{},"sourceType":"module"}