{"ast":null,"code":"var _jsxFileName = \"/Users/kadiatoudiallo/Documents/GitHub/CSE-416-Project/client/src/components/homePage/Main Panel/OurMap.js\";\nimport React, { Component } from 'react';\nimport { Map, TileLayer, ZoomControl, GeoJSON } from 'react-leaflet';\nimport HeatmapLayer from 'react-leaflet-heatmap-layer';\nimport { heatPoints } from './realWorldTest.js'; // import HeatmapLayer from '../src/HeatmapLayer';\n// ---------------------------------------------\n//                CALIFORNIA IMPORTS\n// ---------------------------------------------\n\nimport CaliforniaStateBoundary from '../../../json/CALIFORNIA/CaliforniaStateBoundaries.json'; // import CaliforniaDistricts from '../../../json/CALIFORNIA/CaliforniaDistricts.json'\n// import CaliforniaPrecincts from '../../../json/CALIFORNIA/CaliforniaPrecinct.json'\n// ---------------------------------------------\n//                GEORGIA IMPORTS\n// ---------------------------------------------\n\nimport GeorgiaStateBoundary from '../../../json/GEORGIA/GeorgiaStateBoundaries.json'; // import GeorgiaDistricts from  '../../../json/GEORGIA/GeorgiaDistricts.json';\n// ---------------------------------------------\n//                NEW YORK IMPORTS\n// ---------------------------------------------\n\nimport NewYorkStateBoundary from '../../../json/NEW_YORK/NewYorkStateBoundaries.json';\nimport NYDistricts from '../../../json/NEW_YORK/NewYorkDistricts.json'; // import NYSAssemblyDistricts from '../../../json/Preprocessed_Data/ny_districts.json';\n\nclass OurMap extends Component {\n  constructor() {\n    super();\n\n    this.handleZoomChange = e => {\n      // console.log(\"now: \" + this.mapZoom);\n      this.mapZoom = e.target._zoom;\n      this.props.changeCurrentZoom(this.mapZoom);\n\n      if (this.mapZoom <= 7) {\n        this.props.changeViewFromZoom(\"Districts\", 0); // delete district view (if there)\n\n        this.props.changeViewFromZoom(\"Precincts\", 0); // delete precinct view (if there)\n      } else if (this.mapZoom > 8 && this.mapZoom < 11) {\n        this.props.changeViewFromZoom(\"Precincts\", 0); // delete precinct view (if there)\n\n        this.props.changeViewFromZoom(\"Districts\", 1); // insert district view\n\n        console.log(\"district view\");\n        console.log(\"loaded geojson\");\n      } else if (this.mapZoom > 9) {\n        this.props.changeViewFromZoom(\"Districts\", 0); // delete district view (if there)\n\n        this.props.changeViewFromZoom(\"Precincts\", 1); // insert precinct view\n\n        console.log(\"precinct view\"); // precinct view\n      } // else only state view\n\n    };\n\n    this.state = {\n      test: null\n    };\n    this.mapCenter = [39, -105]; // this.mapZoom = 5;\n    // Map Filters\n\n    this.precinctView = false;\n    this.districtView = false;\n    this.stateView = true; // this.mapZoom;\n  }\n\n  // 6 for district view\n  // 8 or 9 for precinct view\n  render() {\n    // Change center/zoom based on which state is selected\n    if (this.props.currentState == \"Georgia\") {\n      this.mapCenter = [32.5, -85.00078];\n      this.mapZoom = 7;\n    } else if (this.props.currentState == \"California\") {\n      this.mapCenter = [36.778259, -119.417931];\n      this.mapZoom = 6;\n    } else if (this.props.currentState == \"New York\") {\n      this.mapCenter = [42.712776, -77.005974];\n      this.mapZoom = 6.5;\n    } else {\n      this.mapCenter = [39, -105];\n      this.mapZoom = 5;\n    } // scrollWheelZoom={false} \n    // zoomControl={true}\n\n\n    return /*#__PURE__*/React.createElement(Map, {\n      id: \"ourMap\",\n      center: this.mapCenter,\n      zoom: this.mapZoom,\n      onzoomend: e => this.handleZoomChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(HeatmapLayer // fitBoundsOnLoad\n    // fitBoundsOnUpdate\n    , {\n      points: heatPoints,\n      longitudeExtractor: m => m[1],\n      latitudeExtractor: m => m[0],\n      intensityExtractor: m => parseFloat(m[2]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(TileLayer, {\n      attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(GeoJSON, {\n      weight: \"1\",\n      color: \"red\",\n      key: \"California\",\n      data: CaliforniaStateBoundary,\n      onClick: () => this.props.changeCurrentState(\"California\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(GeoJSON, {\n      weight: \"1\",\n      color: \"red\",\n      key: \"Georgia\",\n      data: GeorgiaStateBoundary,\n      onClick: () => this.props.changeCurrentState(\"Georgia\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(GeoJSON, {\n      weight: \"1\",\n      color: \"red\",\n      key: \"NewYork\",\n      data: NewYorkStateBoundary,\n      onClick: () => this.props.changeCurrentState(\"New York\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }), this.props.districtsView ? this.props.districtsContent : \"\", this.props.precinctsView ? this.props.precinctsContent : \"\");\n  }\n\n}\n\nexport default OurMap;","map":{"version":3,"sources":["/Users/kadiatoudiallo/Documents/GitHub/CSE-416-Project/client/src/components/homePage/Main Panel/OurMap.js"],"names":["React","Component","Map","TileLayer","ZoomControl","GeoJSON","HeatmapLayer","heatPoints","CaliforniaStateBoundary","GeorgiaStateBoundary","NewYorkStateBoundary","NYDistricts","OurMap","constructor","handleZoomChange","e","mapZoom","target","_zoom","props","changeCurrentZoom","changeViewFromZoom","console","log","state","test","mapCenter","precinctView","districtView","stateView","render","currentState","m","parseFloat","changeCurrentState","districtsView","districtsContent","precinctsView","precinctsContent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Map, TileLayer, ZoomControl, GeoJSON} from 'react-leaflet';\nimport HeatmapLayer from 'react-leaflet-heatmap-layer';\nimport { heatPoints } from './realWorldTest.js';\n// import HeatmapLayer from '../src/HeatmapLayer';\n\n// ---------------------------------------------\n//                CALIFORNIA IMPORTS\n// ---------------------------------------------\n\nimport CaliforniaStateBoundary from '../../../json/CALIFORNIA/CaliforniaStateBoundaries.json'\n// import CaliforniaDistricts from '../../../json/CALIFORNIA/CaliforniaDistricts.json'\n// import CaliforniaPrecincts from '../../../json/CALIFORNIA/CaliforniaPrecinct.json'\n\n// ---------------------------------------------\n//                GEORGIA IMPORTS\n// ---------------------------------------------\n\nimport GeorgiaStateBoundary from '../../../json/GEORGIA/GeorgiaStateBoundaries.json';\n// import GeorgiaDistricts from  '../../../json/GEORGIA/GeorgiaDistricts.json';\n\n// ---------------------------------------------\n//                NEW YORK IMPORTS\n// ---------------------------------------------\nimport NewYorkStateBoundary from '../../../json/NEW_YORK/NewYorkStateBoundaries.json';\nimport NYDistricts from '../../../json/NEW_YORK/NewYorkDistricts.json';\n// import NYSAssemblyDistricts from '../../../json/Preprocessed_Data/ny_districts.json';\n\nclass OurMap extends Component {\n    constructor () {\n        super();\n        this.state = {\n            test : null\n        }\n\n        this.mapCenter = [39, -105];\n        // this.mapZoom = 5;\n\n        // Map Filters\n        this.precinctView = false;\n        this.districtView = false;\n        this.stateView = true;\n        // this.mapZoom;\n    }\n\n    handleZoomChange = (e) => {\n        // console.log(\"now: \" + this.mapZoom);\n        this.mapZoom = e.target._zoom;\n        this.props.changeCurrentZoom(this.mapZoom);\n\n        if (this.mapZoom <= 7) {\n            this.props.changeViewFromZoom(\"Districts\", 0); // delete district view (if there)\n            this.props.changeViewFromZoom(\"Precincts\", 0); // delete precinct view (if there)\n        }\n        else if (this.mapZoom > 8 && this.mapZoom < 11) {\n            this.props.changeViewFromZoom(\"Precincts\", 0); // delete precinct view (if there)\n            this.props.changeViewFromZoom(\"Districts\", 1); // insert district view\n            console.log(\"district view\")\n            console.log(\"loaded geojson\")\n        }\n        else if (this.mapZoom > 9) {\n            this.props.changeViewFromZoom(\"Districts\", 0); // delete district view (if there)\n            this.props.changeViewFromZoom(\"Precincts\", 1); // insert precinct view\n            console.log(\"precinct view\")\n            // precinct view\n        }\n        // else only state view\n    }\n\n    // 6 for district view\n    // 8 or 9 for precinct view\n    render() {\n\n        // Change center/zoom based on which state is selected\n        if (this.props.currentState == \"Georgia\") {\n            this.mapCenter = [32.5, -85.00078];\n            this.mapZoom = 7;\n        }\n        else if (this.props.currentState == \"California\") {\n            this.mapCenter = [36.778259, -119.417931];\n            this.mapZoom = 6;\n        }\n        else if (this.props.currentState == \"New York\") {\n            this.mapCenter = [42.712776, -77.005974];\n            this.mapZoom = 6.5;\n        }\n        else {\n            this.mapCenter = [39, -105];\n            this.mapZoom = 5;\n        }\n        // scrollWheelZoom={false} \n        // zoomControl={true}\n        return(\n                <Map id=\"ourMap\" center={this.mapCenter} zoom={this.mapZoom} onzoomend={(e) => this.handleZoomChange(e)} >\n                    <HeatmapLayer\n                                // fitBoundsOnLoad\n                                // fitBoundsOnUpdate\n                                points={heatPoints}\n                                longitudeExtractor={m => m[1]}\n                                latitudeExtractor={m => m[0]}\n                                intensityExtractor={m => parseFloat(m[2])} \n                    />\n                    {/* <ZoomControl position = 'bottomleft' > </ZoomControl> */}\n                <TileLayer\n                    attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n\n                    {/* <GeoJSON weight=\"1\" color=\"red\" key=\"California\" data={CaliforniaStateBoundary} onClick={ () => this.props.changeCurrentState(\"California\")}/>  */}\n                    {/* <GeoJSON key=\"California\" data={CaliforniaDistricts} onClick={ () => this.props.changeCurrentState(\"California\")}/>   */}\n                    <GeoJSON weight=\"1\" color=\"red\" key=\"California\" data={CaliforniaStateBoundary} onClick={ () => this.props.changeCurrentState(\"California\")}/> \n                    \n                    <GeoJSON weight=\"1\" color=\"red\" key=\"Georgia\" data={GeorgiaStateBoundary} onClick={ () => this.props.changeCurrentState(\"Georgia\")} />\n                    {/* <GeoJSON key='Georgia' data={GeorgiaPrecincts} /> */}\n                    {/* <GeoJSON key='Georgia' data={GeorgiaDistricts} onClick={ () => this.props.changeCurrentState(\"Georgia\")}/>  /> */}\n\n                    <GeoJSON weight=\"1\" color=\"red\" key='NewYork' data={NewYorkStateBoundary} onClick={ () => this.props.changeCurrentState(\"New York\")}/>\n\n                    {/* From map view filter */}\n                    {this.props.districtsView ? this.props.districtsContent : \"\"}\n                    {this.props.precinctsView ? this.props.precinctsContent : \"\"}\n\n                    {/*  */}\n\n                </Map> \n            );\n        }\n}\n\nexport default OurMap;"]},"metadata":{},"sourceType":"module"}