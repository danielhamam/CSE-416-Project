{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mdari\\\\Desktop\\\\416 Project\\\\CSE-416-Project\\\\client\\\\src\\\\components\\\\homePage\\\\Main Panel\\\\JobCards\\\\JobCard.js\";\nimport React, { Component } from 'react';\nimport ViewJobModal from './ViewJobModal';\nimport DeleteJobModal from './DeleteJobModal';\n\nclass JobCard extends Component {\n  constructor() {\n    super();\n\n    this.toggleSelection = e => {\n      if (this.props.status == \"Pending\") return;\n\n      if (this.state.selected == false && this.props.selectedJobCheck == false) {\n        // Select\n        this.setState({\n          selected: true\n        });\n        this.props.toggleSelectedCard();\n        this.props.updateCurrentJob(this.props.jobCard, true);\n        this.goTop = \"goTopJob \";\n      } else if (this.state.selected == false && this.props.selectedJobCheck == true) {\n        // Cant Select\n        this.setState({\n          selected: false\n        });\n        this.goTop = \"\";\n      } else if (this.state.selected == true && this.props.selectedJobCheck == true) {\n        // Deselect\n        this.setState({\n          selected: false\n        });\n        this.props.toggleSelectedCard();\n        this.props.updateCurrentJob(null, false);\n        this.goTop = \"\";\n      } else {}\n    };\n\n    this.toggleViewModal = e => {\n      e.stopPropagation();\n      if (this.state.showViewModal == true) this.setState({\n        showViewModal: false\n      });else this.setState({\n        showViewModal: true\n      });\n    };\n\n    this.toggleDeleteModal = e => {\n      e.stopPropagation();\n      if (this.state.showDeleteModal == false) this.setState({\n        showDeleteModal: true\n      });else this.setState({\n        showDeleteModal: false\n      });\n    };\n\n    this.handleModalAction = (e, job, type) => {\n      // type 0 = cancel, 1 = delete\n      this.toggleDeleteModal(e);\n      if (type == \"delete\") this.props.deleteJob(job);else this.props.cancelJob(job);\n    };\n\n    this.state = {\n      selected: false,\n      showViewModal: false,\n      showDeleteModal: false\n    };\n    this.JobCardClassStyle = \"\";\n    this.goTop = \"\";\n    this.statusColor = \"\";\n  }\n\n  render() {\n    if (this.state.selected == true) this.JobCardClassStyle = \"jobCard badge badge-pill badge-dark \";else this.JobCardClassStyle = \"jobCard badge badge-pill badge-light \";\n    if (this.props.status == \"Completed\") this.statusColor = \" jobSuccess \";else if (this.props.status == \"Pending\") this.statusColor = \" jobPending \";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: this.JobCardClassStyle + this.goTop + this.statusColor,\n      onClick: this.toggleSelection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jobcardContents\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"jobcardDelete badge badge-pill badge-danger\",\n      onClick: this.toggleDeleteModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"deleteText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 124\n      }\n    }, \" X \"), \" \"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"jobcardTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }, \" \", this.props.jobName, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"jobcardView badge badge-pill badge-dark\",\n      onClick: this.toggleViewModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"viewText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 117\n      }\n    }, \" View \"), \" \")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(DeleteJobModal, {\n      showDeleteModal: this.state.showDeleteModal,\n      handleModalAction: this.handleModalAction,\n      toggleDeleteModal: this.toggleDeleteModal,\n      jobName: this.props.jobName,\n      jobCard: this.props.jobCard,\n      status: this.props.status,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ViewJobModal, {\n      populationDifference: this.props.populationDifference,\n      minorityAnalyzed: this.props.minorityAnalyzed,\n      compactness: this.props.compactness,\n      plansAmount: this.props.plansAmount,\n      status: this.props.status,\n      currentSelected: this.state.selected,\n      selectedJobCheck: this.props.selectedJobCheck,\n      toggleSelection: this.toggleSelection,\n      jobName: this.props.jobName,\n      toggleViewModal: this.toggleViewModal,\n      showViewModal: this.state.showViewModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default JobCard;","map":{"version":3,"sources":["C:/Users/mdari/Desktop/416 Project/CSE-416-Project/client/src/components/homePage/Main Panel/JobCards/JobCard.js"],"names":["React","Component","ViewJobModal","DeleteJobModal","JobCard","constructor","toggleSelection","e","props","status","state","selected","selectedJobCheck","setState","toggleSelectedCard","updateCurrentJob","jobCard","goTop","toggleViewModal","stopPropagation","showViewModal","toggleDeleteModal","showDeleteModal","handleModalAction","job","type","deleteJob","cancelJob","JobCardClassStyle","statusColor","render","jobName","populationDifference","minorityAnalyzed","compactness","plansAmount"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport ViewJobModal from './ViewJobModal'\r\nimport DeleteJobModal from './DeleteJobModal'\r\n\r\nclass JobCard extends Component {\r\n    constructor () {\r\n        super();\r\n        this.state = {\r\n            selected : false,\r\n            showViewModal : false,\r\n            showDeleteModal : false,\r\n        }\r\n        this.JobCardClassStyle = \"\";\r\n        this.goTop = \"\";\r\n        this.statusColor = \"\";\r\n    }\r\n\r\n    toggleSelection = (e) => {\r\n\r\n        if (this.props.status == \"Pending\") return;\r\n\r\n        if (this.state.selected == false && this.props.selectedJobCheck== false) { // Select\r\n            this.setState({selected: true});\r\n            this.props.toggleSelectedCard();\r\n            this.props.updateCurrentJob(this.props.jobCard, true);\r\n            this.goTop=\"goTopJob \";\r\n        }\r\n        else if (this.state.selected == false && this.props.selectedJobCheck == true) { // Cant Select\r\n            this.setState({selected : false});\r\n            this.goTop=\"\";\r\n        }\r\n        else if (this.state.selected == true && this.props.selectedJobCheck == true) { // Deselect\r\n            this.setState({selected: false});\r\n            this.props.toggleSelectedCard();\r\n            this.props.updateCurrentJob(null, false);\r\n            this.goTop=\"\";\r\n        }\r\n        else {} \r\n    }\r\n\r\n    toggleViewModal = (e) => {\r\n        e.stopPropagation();\r\n        if (this.state.showViewModal == true) this.setState({showViewModal : false});\r\n        else this.setState({showViewModal : true});\r\n    }\r\n\r\n    toggleDeleteModal = (e) => {\r\n        e.stopPropagation();\r\n        if (this.state.showDeleteModal == false) this.setState({showDeleteModal : true});\r\n        else this.setState({showDeleteModal : false});\r\n    }\r\n\r\n    handleModalAction = (e, job, type) => { // type 0 = cancel, 1 = delete\r\n        this.toggleDeleteModal(e);\r\n        if (type == \"delete\") this.props.deleteJob(job);\r\n        else this.props.cancelJob(job) \r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.selected == true) this.JobCardClassStyle = \"jobCard badge badge-pill badge-dark \";\r\n        else this.JobCardClassStyle = \"jobCard badge badge-pill badge-light \";\r\n\r\n        if (this.props.status == \"Completed\" ) this.statusColor = \" jobSuccess \";\r\n        else if (this.props.status == \"Pending\") this.statusColor = \" jobPending \";\r\n\r\n        return (\r\n            <div> \r\n                <div className={this.JobCardClassStyle + this.goTop + this.statusColor} onClick={this.toggleSelection}>\r\n                    <div className=\"jobcardContents\">\r\n                        <button className=\"jobcardDelete badge badge-pill badge-danger\" onClick={this.toggleDeleteModal} > <div className=\"deleteText\"> X </div> </button>\r\n                        <span className=\"jobcardTitle\"> {this.props.jobName} </span> \r\n                        <button className=\"jobcardView badge badge-pill badge-dark\" onClick={this.toggleViewModal}> <div className=\"viewText\" > View </div> </button>\r\n                    </div> \r\n                    <br /> \r\n                    <br />\r\n                </div>\r\n                <DeleteJobModal showDeleteModal={this.state.showDeleteModal} handleModalAction={this.handleModalAction} \r\n                toggleDeleteModal={this.toggleDeleteModal} jobName={this.props.jobName} jobCard={this.props.jobCard} \r\n                status={this.props.status}\r\n                />\r\n                <ViewJobModal populationDifference={this.props.populationDifference} minorityAnalyzed={this.props.minorityAnalyzed} compactness={this.props.compactness} \r\n                plansAmount={this.props.plansAmount} status={this.props.status} currentSelected={this.state.selected} selectedJobCheck={this.props.selectedJobCheck} \r\n                toggleSelection={this.toggleSelection} jobName={this.props.jobName} toggleViewModal={this.toggleViewModal} showViewModal={this.state.showViewModal}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default JobCard;"]},"metadata":{},"sourceType":"module"}