{"ast":null,"code":"async function getState(url = 'localhost:8080/home', data = {}) {\n  // Default options are marked with *\n  const response = await fetch(url, {\n    method: 'POST',\n    // *GET, POST, PUT, DELETE, etc.\n    mode: 'cors',\n    // no-cors, *cors, same-origin\n    cache: 'no-cache',\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: 'same-origin',\n    // include, *same-origin, omit\n    headers: {\n      'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n    },\n    redirect: 'follow',\n    // manual, *follow, error\n    referrerPolicy: 'no-referrer',\n    // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n\n  });\n  return response.json(); // parses JSON response into native JavaScript objects\n} // Example POST method implementation:\n\n\nexport async function generateBatch(data) {\n  console.log(\"client.js\");\n  let url = 'localhost:8080/home'; // Default options are marked with *\n\n  const response = await fetch(url, {\n    method: 'POST',\n    // *GET, POST, PUT, DELETE, etc.\n    mode: 'cors',\n    // no-cors, *cors, same-origin\n    cache: 'no-cache',\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: 'same-origin',\n    // include, *same-origin, omit\n    headers: {\n      'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n    },\n    redirect: 'follow',\n    // manual, *follow, error\n    referrerPolicy: 'same-origin',\n    // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n\n  });\n  console.log(\"client.js 1\");\n  return response.json(); // parses JSON response into native JavaScript objects\n}","map":{"version":3,"sources":["/Users/carloslopez/Desktop/SCHOOL/ComputerScience/CSE416/CSE-416-Project/client/src/endpoint/client.js"],"names":["getState","url","data","response","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","json","generateBatch","console","log"],"mappings":"AAEA,eAAeA,QAAf,CAAwBC,GAAG,GAAG,qBAA9B,EAAqDC,IAAI,GAAG,EAA5D,EAAgE;AAC5D;AACA,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAD,EAAM;AAClCI,IAAAA,MAAM,EAAE,MAD0B;AAClB;AAChBC,IAAAA,IAAI,EAAE,MAF4B;AAEpB;AACdC,IAAAA,KAAK,EAAE,UAH2B;AAGf;AACnBC,IAAAA,WAAW,EAAE,aAJqB;AAIN;AAC5BC,IAAAA,OAAO,EAAE;AACT,sBAAgB,kBADP,CAET;;AAFS,KALyB;AASlCC,IAAAA,QAAQ,EAAE,QATwB;AASd;AACpBC,IAAAA,cAAc,EAAE,aAVkB;AAUH;AAC/BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,IAAf,CAX4B,CAWP;;AAXO,GAAN,CAA5B;AAaA,SAAOC,QAAQ,CAACY,IAAT,EAAP,CAf4D,CAepC;AACzB,C,CAEH;;;AACA,OAAO,eAAeC,aAAf,CAA6Bd,IAA7B,EAAmC;AACtCe,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,MAAIjB,GAAG,GAAG,qBAAV,CAFsC,CAGtC;;AACA,QAAME,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAD,EAAM;AAClCI,IAAAA,MAAM,EAAE,MAD0B;AAClB;AAChBC,IAAAA,IAAI,EAAE,MAF4B;AAEpB;AACdC,IAAAA,KAAK,EAAE,UAH2B;AAGf;AACnBC,IAAAA,WAAW,EAAE,aAJqB;AAIN;AAC5BC,IAAAA,OAAO,EAAE;AACT,sBAAgB,kBADP,CAET;;AAFS,KALyB;AASlCC,IAAAA,QAAQ,EAAE,QATwB;AASd;AACpBC,IAAAA,cAAc,EAAE,aAVkB;AAUH;AAC/BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,IAAf,CAX4B,CAWP;;AAXO,GAAN,CAA5B;AAaAe,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,SAAOf,QAAQ,CAACY,IAAT,EAAP,CAlBsC,CAkBd;AACzB","sourcesContent":["\n\nasync function getState(url = 'localhost:8080/home', data = {}) {\n    // Default options are marked with *\n    const response = await fetch(url, {\n    method: 'POST', // *GET, POST, PUT, DELETE, etc.\n    mode: 'cors', // no-cors, *cors, same-origin\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: 'same-origin', // include, *same-origin, omit\n    headers: {\n    'Content-Type': 'application/json'\n    // 'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    redirect: 'follow', // manual, *follow, error\n    referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n    });\n    return response.json(); // parses JSON response into native JavaScript objects\n  }\n\n// Example POST method implementation:\nexport async function generateBatch(data) {\n    console.log(\"client.js\")\n    let url = 'localhost:8080/home';\n    // Default options are marked with *\n    const response = await fetch(url, {\n    method: 'POST', // *GET, POST, PUT, DELETE, etc.\n    mode: 'cors', // no-cors, *cors, same-origin\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: 'same-origin', // include, *same-origin, omit\n    headers: {\n    'Content-Type': 'application/json'\n    // 'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    redirect: 'follow', // manual, *follow, error\n    referrerPolicy: 'same-origin', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n    });\n    console.log(\"client.js 1\")\n    return response.json(); // parses JSON response into native JavaScript objects\n  }\n  \n"]},"metadata":{},"sourceType":"module"}