{"ast":null,"code":"var _jsxFileName = \"/Users/carloslopez/Desktop/SCHOOL/ComputerScience/CSE416/CSE-416-Project/src/components/homePage/Main Panel/BatchCards/DeleteModal.js\";\nimport React, { Component } from 'react';\nimport { Modal, Button } from 'react-bootstrap'; // Triggered when clicking \"View\" on a batch\n\nclass DeleteModal extends Component {\n  constructor() {\n    super();\n    this.state = {}; // To edit class name of modal display\n\n    this.nameSelect = \"Select\";\n    this.selectButtonColor = \"primary\";\n    this.activeSelection = \"\"; // To show if pending or ready\n\n    this.statusDisplay = \"\";\n    this.colorStatus = \"\";\n  }\n\n  render() {\n    // To check to disable or enable select button\n    if ((this.props.selectedCard == true && this.props.currentSelected == false) | this.props.status == false) {\n      // turn the select button gray\n      this.nameSelect = \"Select\";\n      this.selectButtonColor = \"secondary\";\n      this.activeSelection = \"disabled\";\n    } else if (this.props.selectedCard == true && this.props.currentSelected == true) {\n      this.nameSelect = \"Deselect\";\n      this.selectButtonColor = \"primary\";\n      this.activeSelection = \"active\";\n    } else {\n      this.nameSelect = \"Select\";\n      this.selectButtonColor = \"primary\";\n      this.activeSelection = \"active\";\n    } // To display whether it is ready or pending\n\n\n    if (this.props.status == false) {\n      this.statusDisplay = \"Pending\";\n      this.colorStatus = \" batchdisplayPending\";\n    } else if (this.props.status == true) {\n      this.statusDisplay = \"Ready\";\n      this.colorStatus = \" batchdisplaySuccess\";\n    }\n\n    return (\n      /*#__PURE__*/\n      // \"Props\" means properties. We communicated with BatchCard.js to connect the card's buttons with the modal.\n      React.createElement(Modal, {\n        backdrop: \"static\",\n        show: this.props.showDeleteModal,\n        onHide: this.props.showDeleteModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        closeButton: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }, \" Are you sure you want to delete this batch? \")), /*#__PURE__*/React.createElement(Modal.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"p\", {\n        className: \"batchTitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 34\n        }\n      }, \" NOTE: You can not undo this action.\"), \" \"), /*#__PURE__*/React.createElement(Modal.Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"danger\",\n        onClick: this.props.toggleDeleteModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }\n      }, \"No\"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        onClick: this.props.deleteBatch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }\n      }, \"Yes\"))) // {/* </div> */}\n\n    );\n  }\n\n}\n\nexport default DeleteModal;","map":{"version":3,"sources":["/Users/carloslopez/Desktop/SCHOOL/ComputerScience/CSE416/CSE-416-Project/src/components/homePage/Main Panel/BatchCards/DeleteModal.js"],"names":["React","Component","Modal","Button","DeleteModal","constructor","state","nameSelect","selectButtonColor","activeSelection","statusDisplay","colorStatus","render","props","selectedCard","currentSelected","status","showDeleteModal","toggleDeleteModal","deleteBatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,iBAA9B,C,CAEA;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAChCI,EAAAA,WAAW,GAAI;AACX;AACA,SAAKC,KAAL,GAAa,EAAb,CAFW,CAIX;;AACA,SAAKC,UAAL,GAAkB,QAAlB;AACA,SAAKC,iBAAL,GAAyB,SAAzB;AACA,SAAKC,eAAL,GAAuB,EAAvB,CAPW,CAQX;;AACA,SAAKC,aAAL,GAAqB,EAArB;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACH;;AACDC,EAAAA,MAAM,GAAG;AAEL;AAEA,QAAK,CAAC,KAAKC,KAAL,CAAWC,YAAX,IAA2B,IAA3B,IAAmC,KAAKD,KAAL,CAAWE,eAAX,IAA8B,KAAlE,IAA2E,KAAKF,KAAL,CAAWG,MAAX,IAAqB,KAArG,EAA6G;AACzG;AACA,WAAKT,UAAL,GAAkB,QAAlB;AACA,WAAKC,iBAAL,GAAyB,WAAzB;AACA,WAAKC,eAAL,GAAuB,UAAvB;AACH,KALD,MAMK,IAAI,KAAKI,KAAL,CAAWC,YAAX,IAA2B,IAA3B,IAAmC,KAAKD,KAAL,CAAWE,eAAX,IAA8B,IAArE,EAA2E;AAC5E,WAAKR,UAAL,GAAkB,UAAlB;AACA,WAAKC,iBAAL,GAAyB,SAAzB;AACA,WAAKC,eAAL,GAAuB,QAAvB;AACH,KAJI,MAKA;AACD,WAAKF,UAAL,GAAkB,QAAlB;AACA,WAAKC,iBAAL,GAAyB,SAAzB;AACA,WAAKC,eAAL,GAAuB,QAAvB;AACH,KAnBI,CAqBL;;;AACA,QAAI,KAAKI,KAAL,CAAWG,MAAX,IAAqB,KAAzB,EAAgC;AAC5B,WAAKN,aAAL,GAAqB,SAArB;AACA,WAAKC,WAAL,GAAmB,sBAAnB;AACH,KAHD,MAIK,IAAI,KAAKE,KAAL,CAAWG,MAAX,IAAqB,IAAzB,EAA+B;AAChC,WAAKN,aAAL,GAAqB,OAArB;AACA,WAAKC,WAAL,GAAmB,sBAAnB;AACH;;AAED;AAAA;AACA;AAEQ,0BAAC,KAAD;AAAO,QAAA,QAAQ,EAAC,QAAhB;AAAyB,QAAA,IAAI,EAAE,KAAKE,KAAL,CAAWI,eAA1C;AAA2D,QAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWI,eAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDADA,CADJ,eAII,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAa;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAAb,MAJJ,eAKI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,QAAhB;AAAyB,QAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWK,iBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,OAAO,EAAE,KAAKL,KAAL,CAAWM,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,CALJ,CAHR,CAaI;;AAbJ;AAgBH;;AA5D+B;;AA+DpC,eAAef,WAAf","sourcesContent":["import React, {Component} from 'react';\nimport { Modal, Button } from 'react-bootstrap';\n\n// Triggered when clicking \"View\" on a batch\n\nclass DeleteModal extends Component {\n    constructor () {\n        super();\n        this.state = {\n        }\n        // To edit class name of modal display\n        this.nameSelect = \"Select\"\n        this.selectButtonColor = \"primary\"\n        this.activeSelection = \"\"\n        // To show if pending or ready\n        this.statusDisplay = \"\"\n        this.colorStatus = \"\"\n    }\n    render() {\n\n        // To check to disable or enable select button\n\n        if ( (this.props.selectedCard == true && this.props.currentSelected == false) | this.props.status == false ) {\n            // turn the select button gray\n            this.nameSelect = \"Select\"\n            this.selectButtonColor = \"secondary\";\n            this.activeSelection = \"disabled\";\n        }\n        else if (this.props.selectedCard == true && this.props.currentSelected == true) {\n            this.nameSelect = \"Deselect\"\n            this.selectButtonColor = \"primary\";\n            this.activeSelection = \"active\";\n        }\n        else {\n            this.nameSelect = \"Select\"\n            this.selectButtonColor = \"primary\";\n            this.activeSelection = \"active\";\n        }\n\n        // To display whether it is ready or pending\n        if (this.props.status == false) {\n            this.statusDisplay = \"Pending\";\n            this.colorStatus = \" batchdisplayPending\"\n        }\n        else if (this.props.status == true) {\n            this.statusDisplay = \"Ready\";\n            this.colorStatus = \" batchdisplaySuccess\"\n        }\n\n        return (\n        // \"Props\" means properties. We communicated with BatchCard.js to connect the card's buttons with the modal.\n    \n                <Modal backdrop=\"static\" show={this.props.showDeleteModal} onHide={this.props.showDeleteModal}>  \n                    <Modal.Header closeButton >\n                    <h5> Are you sure you want to delete this batch? </h5>\n                    </Modal.Header>\n                    <Modal.Body> <p className=\"batchTitle\"> NOTE: You can not undo this action.</p> </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"danger\" onClick={this.props.toggleDeleteModal} >No</Button>\n                        <Button variant=\"primary\" onClick={this.props.deleteBatch}>Yes</Button>\n                    </Modal.Footer>\n                </Modal>\n            // {/* </div> */}\n            \n        );\n    }\n}\n\nexport default DeleteModal;"]},"metadata":{},"sourceType":"module"}