{"ast":null,"code":"var _jsxFileName = \"/Users/danielhamam/Desktop/Computer_Programming/Broncos_Project/client/src/components/homePage/Main Panel/DistrictingPlans/YourDistrictingPlans.js\";\nimport React, { Component } from 'react';\nimport DistrictPlan from './DistrictPlan'; // This class represents the list of Jobs. This will handle \"currently selected Job\" and \n// generally manage the jobs. \n\nclass YourDistrictingPlans extends Component {\n  constructor() {\n    super();\n    this.state = {\n      title: \"No Job Selected\"\n    };\n  }\n\n  render() {\n    if (this.props.currentJob == \"\" && this.state.title != \"No Job Selected\") {\n      this.setState({\n        title: \"No Job Selected\"\n      }); // if there is no job, then title is \"No Job Selected: \"\n    } else if (this.props.currentJob != \"\" && this.state.title != this.props.currentJob.jobName) {\n      this.setState({\n        title: this.props.currentJob.jobName\n      });\n    }\n\n    return (\n      /*#__PURE__*/\n      // Passing in parent variables to keep track of selection (so no more than 1 can be selected at once)\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }\n      }, \" Selected Plan: \"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }\n      }, \" \", this.state.title, \": \"), this.props.currentJob.districts.map(district => {\n        return /*#__PURE__*/React.createElement(DistrictPlan, {\n          selectedPlanCheck: this.props.selectedPlanCheck,\n          toggleSelectedPlanCheck: this.props.toggleSelectedPlanCheck,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 32\n          }\n        });\n      })))\n    );\n  }\n\n}\n\nexport default YourDistrictingPlans;","map":{"version":3,"sources":["/Users/danielhamam/Desktop/Computer_Programming/Broncos_Project/client/src/components/homePage/Main Panel/DistrictingPlans/YourDistrictingPlans.js"],"names":["React","Component","DistrictPlan","YourDistrictingPlans","constructor","state","title","render","props","currentJob","setState","jobName","districts","map","district","selectedPlanCheck","toggleSelectedPlanCheck"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,YAAP,MAAyB,gBAAzB,C,CAEA;AACA;;AAEA,MAAMC,oBAAN,SAAmCF,SAAnC,CAA6C;AACzCG,EAAAA,WAAW,GAAI;AACX;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKC,KAAL,CAAWC,UAAX,IAAyB,EAAzB,IAA+B,KAAKJ,KAAL,CAAWC,KAAX,IAAoB,iBAAvD,EAA0E;AACtE,WAAKI,QAAL,CAAc;AAACJ,QAAAA,KAAK,EAAG;AAAT,OAAd,EADsE,CAC1B;AAC/C,KAFD,MAGK,IAAI,KAAKE,KAAL,CAAWC,UAAX,IAAyB,EAAzB,IAA+B,KAAKJ,KAAL,CAAWC,KAAX,IAAoB,KAAKE,KAAL,CAAWC,UAAX,CAAsBE,OAA7E,EAAsF;AACvF,WAAKD,QAAL,CAAc;AAACJ,QAAAA,KAAK,EAAG,KAAKE,KAAL,CAAWC,UAAX,CAAsBE;AAA/B,OAAd;AACH;;AAED;AAAA;AACI;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFR,eAGQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHR,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAO,KAAKN,KAAL,CAAWC,KAAlB,OAJJ,EAMK,KAAKE,KAAL,CAAWC,UAAX,CAAsBG,SAAtB,CAAgCC,GAAhC,CAAsCC,QAAD,IAAc;AAChD,4BAAO,oBAAC,YAAD;AAAc,UAAA,iBAAiB,EAAE,KAAKN,KAAL,CAAWO,iBAA5C;AACP,UAAA,uBAAuB,EAAE,KAAKP,KAAL,CAAWQ,uBAD7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,OAJA,CANL,CADJ;AAFJ;AAuBH;;AAvCwC;;AA0C7C,eAAeb,oBAAf","sourcesContent":["import React, {Component} from 'react';\nimport DistrictPlan from './DistrictPlan';\n\n// This class represents the list of Jobs. This will handle \"currently selected Job\" and \n// generally manage the jobs. \n\nclass YourDistrictingPlans extends Component {\n    constructor () {\n        super();\n        this.state = {\n            title: \"No Job Selected\"\n        }\n    }\n\n    render() {\n        if (this.props.currentJob == \"\" && this.state.title != \"No Job Selected\") {\n            this.setState({title : \"No Job Selected\"}); // if there is no job, then title is \"No Job Selected: \"\n        } \n        else if (this.props.currentJob != \"\" && this.state.title != this.props.currentJob.jobName) {\n            this.setState({title : this.props.currentJob.jobName});\n        }\n\n        return (\n            // Passing in parent variables to keep track of selection (so no more than 1 can be selected at once)\n            <div>\n                <ul> \n                    <div> Selected Plan: </div> \n                        <br></br>\n                        <br></br>\n                    <div> {this.state.title}: </div>\n\n                    {this.props.currentJob.districts.map( (district) => {\n                        return <DistrictPlan selectedPlanCheck={this.props.selectedPlanCheck} \n                        toggleSelectedPlanCheck={this.props.toggleSelectedPlanCheck} \n                        />\n                    })}\n\n                    {/* <DistrictPlan selectedPlanCheck={this.props.selectedPlanCheck} toggleSelectedPlanCheck={this.props.toggleSelectedPlanCheck} />\n                    <DistrictPlan selectedPlanCheck={this.props.selectedPlanCheck} toggleSelectedPlanCheck={this.props.toggleSelectedPlanCheck} />\n                    <DistrictPlan selectedPlanCheck={this.props.selectedPlanCheck} toggleSelectedPlanCheck={this.props.toggleSelectedPlanCheck} /> */}\n\n                </ul>\n            </div>\n            \n        );\n    }\n}\n\nexport default YourDistrictingPlans;"]},"metadata":{},"sourceType":"module"}