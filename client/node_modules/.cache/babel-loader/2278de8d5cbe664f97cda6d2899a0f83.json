{"ast":null,"code":"var _jsxFileName = \"/Users/carloslopez/Desktop/SCHOOL/ComputerScience/CSE416/CSE-416-Project/client/src/App.js\";\nimport HomeScreen from \"./components/homePage/HomeScreen\";\nimport DeveloperScreen from \"./components/developerscreen/Dev\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\";\nimport Switch from \"react-bootstrap/esm/Switch\"; // App.js is the parent component\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      batchCards: [],\n      selectedBatchCheck: false,\n      selectedPlanCheck: false,\n      currentBatchName: \"No Batch Selected: \" // name of the currently selected batch\n      // selectedBatchName : \"\", // take name of selected district\n      // selectedPlanName : \"\", // take name of selected district\n      // todoLists: testTodoListData.todoLists, // Portion of my code taken from CSE 316\n\n    };\n\n    this.createBatch = () => {};\n\n    this.deleteBatch = id => {// string\n    };\n\n    this.deletePlan = id => {// num\n    };\n\n    this.getSelectedBatch = () => {// returns selected batch\n      // .map and .filter use\n      // call in your districting plans and do .districtPlans from batch's database for plans\n    };\n\n    this.toggleSelectedBatchCheck = () => {\n      if (this.state.selectedBatchCheck == false) this.setState({\n        selectedBatchCheck: true\n      });else this.setState({\n        selectedBatchCheck: false\n      });\n    };\n\n    this.toggleSelectedPlanCheck = () => {\n      if (this.state.selectedPlanCheck == false) this.setState({\n        selectedPlanCheck: true\n      });else this.setState({\n        selectedPlanCheck: false\n      });\n    };\n\n    this.updateCurrentBatchName = name => {\n      if (name == \"\") this.setState({\n        currentBatchName: \"No Batch Selected: \"\n      });else this.setState({\n        currentBatchName: name + \":\"\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(BrowserRouter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Redirect, {\n      exact: true,\n      from: \"/\",\n      to: {\n        pathname: \"/home\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/home\",\n      name: \"home\",\n      render: props => /*#__PURE__*/React.createElement(HomeScreen, {\n        currentBatchName: this.state.currentBatchName,\n        updateCurrentBatchName: this.updateCurrentBatchName,\n        selectedPlanCheck: this.state.selectedPlanCheck,\n        toggleSelectedPlanCheck: this.toggleSelectedPlanCheck,\n        selectedBatchCheck: this.state.selectedBatchCheck,\n        toggleSelectedBatchCheck: this.toggleSelectedBatchCheck,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/developer\",\n      component: /*#__PURE__*/React.createElement(DeveloperScreen, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 26\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/carloslopez/Desktop/SCHOOL/ComputerScience/CSE416/CSE-416-Project/client/src/App.js"],"names":["HomeScreen","DeveloperScreen","React","Component","BrowserRouter","Route","Redirect","Switch","App","state","batchCards","selectedBatchCheck","selectedPlanCheck","currentBatchName","createBatch","deleteBatch","id","deletePlan","getSelectedBatch","toggleSelectedBatchCheck","setState","toggleSelectedPlanCheck","updateCurrentBatchName","name","render","pathname","props"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,kCAAvB;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,QAA/B,QAA+C,kBAA/C;AACA,OAAOC,MAAP,MAAmB,4BAAnB,C,CAEA;;AACA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACxBM,KADwB,GAChB;AACNC,MAAAA,UAAU,EAAG,EADP;AAENC,MAAAA,kBAAkB,EAAE,KAFd;AAGNC,MAAAA,iBAAiB,EAAE,KAHb;AAINC,MAAAA,gBAAgB,EAAG,qBAJb,CAIoC;AAC1C;AACA;AACA;;AAPM,KADgB;;AAAA,SAW1BC,WAX0B,GAWZ,MAAM,CAEnB,CAbyB;;AAAA,SAe1BC,WAf0B,GAeXC,EAAD,IAAQ,CAAE;AAEvB,KAjByB;;AAAA,SAmB1BC,UAnB0B,GAmBZD,EAAD,IAAQ,CAAE;AAEtB,KArByB;;AAAA,SAuB1BE,gBAvB0B,GAuBP,MAAM,CACvB;AACA;AACA;AACD,KA3ByB;;AAAA,SA6B1BC,wBA7B0B,GA6BC,MAAM;AAC/B,UAAI,KAAKV,KAAL,CAAWE,kBAAX,IAAiC,KAArC,EAA4C,KAAKS,QAAL,CAAc;AAACT,QAAAA,kBAAkB,EAAG;AAAtB,OAAd,EAA5C,KACK,KAAKS,QAAL,CAAc;AAACT,QAAAA,kBAAkB,EAAG;AAAtB,OAAd;AACR,KAhC2B;;AAAA,SAkC1BU,uBAlC0B,GAkCA,MAAM;AAC9B,UAAI,KAAKZ,KAAL,CAAWG,iBAAX,IAAgC,KAApC,EAA2C,KAAKQ,QAAL,CAAc;AAACR,QAAAA,iBAAiB,EAAE;AAApB,OAAd,EAA3C,KACK,KAAKQ,QAAL,CAAc;AAACR,QAAAA,iBAAiB,EAAG;AAArB,OAAd;AACR,KArC2B;;AAAA,SAuC1BU,sBAvC0B,GAuCAC,IAAD,IAAU;AACjC,UAAIA,IAAI,IAAI,EAAZ,EAAgB,KAAKH,QAAL,CAAc;AAACP,QAAAA,gBAAgB,EAAG;AAApB,OAAd,EAAhB,KACK,KAAKO,QAAL,CAAc;AAACP,QAAAA,gBAAgB,EAAGU,IAAI,GAAG;AAA3B,OAAd;AACN,KA1CyB;AAAA;;AA4C1BC,EAAAA,MAAM,GAAG;AACT,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAU,MAAA,KAAK,MAAf;AAAgB,MAAA,IAAI,EAAC,GAArB;AAAyB,MAAA,EAAE,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,MAAM,EAAGC,KAAD,iBACN,oBAAC,UAAD;AAAY,QAAA,gBAAgB,EAAG,KAAKjB,KAAL,CAAWI,gBAA1C;AAA4D,QAAA,sBAAsB,EAAE,KAAKS,sBAAzF;AAAiH,QAAA,iBAAiB,EAAE,KAAKb,KAAL,CAAWG,iBAA/I;AAAkK,QAAA,uBAAuB,EAAE,KAAKS,uBAAhM;AAAyN,QAAA,kBAAkB,EAAE,KAAKZ,KAAL,CAAWE,kBAAxP;AAA4Q,QAAA,wBAAwB,EAAE,KAAKQ,wBAA3S;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eASE,oBAAC,KAAD;AACA,MAAA,IAAI,EAAC,YADL;AAEA,MAAA,SAAS,eAAI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF,CAHJ,CADF;AAuBC;;AApEyB;;AAuE5B,eAAeX,GAAf","sourcesContent":["import HomeScreen from \"./components/homePage/HomeScreen\";\nimport DeveloperScreen from \"./components/developerscreen/Dev\"\nimport React, { Component } from \"react\";\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\";\nimport Switch from \"react-bootstrap/esm/Switch\";\n\n// App.js is the parent component\nclass App extends Component {\n    state = {\n      batchCards : [],\n      selectedBatchCheck: false,\n      selectedPlanCheck: false,\n      currentBatchName : \"No Batch Selected: \", // name of the currently selected batch\n      // selectedBatchName : \"\", // take name of selected district\n      // selectedPlanName : \"\", // take name of selected district\n      // todoLists: testTodoListData.todoLists, // Portion of my code taken from CSE 316\n    }\n\n  createBatch = () => {\n    \n  }\n\n  deleteBatch = (id) => { // string\n\n  }\n\n  deletePlan = (id) => { // num\n\n  }\n\n  getSelectedBatch = () => {\n    // returns selected batch\n    // .map and .filter use\n    // call in your districting plans and do .districtPlans from batch's database for plans\n  }\n  \n  toggleSelectedBatchCheck = () => {\n    if (this.state.selectedBatchCheck == false) this.setState({selectedBatchCheck : true});\n    else this.setState({selectedBatchCheck : false});\n}\n\n  toggleSelectedPlanCheck = () => {\n    if (this.state.selectedPlanCheck == false) this.setState({selectedPlanCheck: true});\n    else this.setState({selectedPlanCheck : false});\n}\n\n  updateCurrentBatchName = (name) => {\n    if (name == \"\") this.setState({currentBatchName : \"No Batch Selected: \"});\n    else this.setState({currentBatchName : name + \":\"});\n  }\n\n  render() {\n  return (\n    <div>\n\n    \n        <BrowserRouter>\n          <Switch>\n            <Redirect exact from=\"/\" to={{ pathname: \"/home\" }} />\n            <Route\n              path=\"/home\"\n              name=\"home\"\n              render={(props) => (\n                <HomeScreen currentBatchName ={this.state.currentBatchName} updateCurrentBatchName={this.updateCurrentBatchName} selectedPlanCheck={this.state.selectedPlanCheck} toggleSelectedPlanCheck={this.toggleSelectedPlanCheck} selectedBatchCheck={this.state.selectedBatchCheck} toggleSelectedBatchCheck={this.toggleSelectedBatchCheck}/>\n              )}/>\n              \n            <Route\n            path=\"/developer\"\n            component ={ <DeveloperScreen/>}\n            />\n      \n          </Switch>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}