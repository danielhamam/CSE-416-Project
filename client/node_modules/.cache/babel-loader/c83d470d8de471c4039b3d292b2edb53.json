{"ast":null,"code":"var myHeaders = new Headers();\nmyHeaders.append(\"Content-Type\", \"application/json\");\nvar raw = JSON.stringify({\n  \"state\": \"NY\"\n});\nvar requestOptions = {\n  method: 'GET',\n  headers: myHeaders,\n  body: raw,\n  redirect: 'follow'\n};\nfetch(\"localhost:8080/home\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error));\nexport async function getState(data = {}) {\n  // Default options are marked with *\n  // console.log(data);\n  // return await fetch('http://localhost:8080/home',{ \n  //     method: 'get',\n  //     headers: {\n  //     'Accept': 'application/json, text/plain, */*',\n  //     'Content-Type': 'application/json',\n  //     },\n  //     credentials: 'same-origin',\n  //     body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n  // }).then(res => res.json());\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  var raw = JSON.stringify({\n    \"state\": \"NY\"\n  });\n  var requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow'\n  };\n  fetch(\"localhost:8080/home\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error));\n} // Example POST method implementation:\n\nexport async function generateBatch(data) {\n  console.log(\"client.js\");\n  let url = 'localhost:8080/home'; // Default options are marked with *\n\n  const response = await fetch(url, {\n    method: 'POST',\n    // *GET, POST, PUT, DELETE, etc.\n    mode: 'cors',\n    // no-cors, *cors, same-origin\n    cache: 'no-cache',\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: 'same-origin',\n    // include, *same-origin, omit\n    headers: {\n      'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n    },\n    redirect: 'follow',\n    // manual, *follow, error\n    referrerPolicy: 'origin-when-cross-origin',\n    // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n\n  });\n  console.log(\"client.js 1\");\n  return await response.json(); // parses JSON response into native JavaScript objects\n}","map":{"version":3,"sources":["/Users/carloslopez/Desktop/SCHOOL/ComputerScience/CSE416/CSE-416-Project/client/src/endpoint/client.js"],"names":["myHeaders","Headers","append","raw","JSON","stringify","requestOptions","method","headers","body","redirect","fetch","then","response","text","result","console","log","catch","error","getState","data","generateBatch","url","mode","cache","credentials","referrerPolicy","json"],"mappings":"AAAA,IAAIA,SAAS,GAAG,IAAIC,OAAJ,EAAhB;AACAD,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AAEA,IAAIC,GAAG,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAC,WAAQ;AAAT,CAAf,CAAV;AAEA,IAAIC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,KADW;AAEnBC,EAAAA,OAAO,EAAER,SAFU;AAGnBS,EAAAA,IAAI,EAAEN,GAHa;AAInBO,EAAAA,QAAQ,EAAE;AAJS,CAArB;AAOAC,KAAK,CAAC,qBAAD,EAAwBL,cAAxB,CAAL,CACGM,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAFlB,EAGGG,KAHH,CAGSC,KAAK,IAAIH,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBE,KAArB,CAHlB;AAMA,OAAO,eAAeC,QAAf,CAAwBC,IAAI,GAAG,EAA/B,EAAmC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAIrB,SAAS,GAAG,IAAIC,OAAJ,EAAhB;AACAD,EAAAA,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AAEA,MAAIC,GAAG,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAC,aAAQ;AAAT,GAAf,CAAV;AAEA,MAAIC,cAAc,GAAG;AACrBC,IAAAA,MAAM,EAAE,KADa;AAErBC,IAAAA,OAAO,EAAER,SAFY;AAGrBS,IAAAA,IAAI,EAAEN,GAHe;AAIrBO,IAAAA,QAAQ,EAAE;AAJW,GAArB;AAOAC,EAAAA,KAAK,CAAC,qBAAD,EAAwBL,cAAxB,CAAL,CACCM,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAFhB,EAGCG,KAHD,CAGOC,KAAK,IAAIH,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBE,KAArB,CAHhB;AAKD,C,CAEH;;AACA,OAAO,eAAeG,aAAf,CAA6BD,IAA7B,EAAmC;AACtCL,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,MAAIM,GAAG,GAAG,qBAAV,CAFsC,CAGtC;;AACA,QAAMV,QAAQ,GAAG,MAAMF,KAAK,CAACY,GAAD,EAAM;AAClChB,IAAAA,MAAM,EAAE,MAD0B;AAClB;AAChBiB,IAAAA,IAAI,EAAE,MAF4B;AAEpB;AACdC,IAAAA,KAAK,EAAE,UAH2B;AAGf;AACnBC,IAAAA,WAAW,EAAE,aAJqB;AAIN;AAC5BlB,IAAAA,OAAO,EAAE;AACT,sBAAgB,kBADP,CAET;;AAFS,KALyB;AASlCE,IAAAA,QAAQ,EAAE,QATwB;AASd;AACpBiB,IAAAA,cAAc,EAAE,0BAVkB;AAUU;AAC5ClB,IAAAA,IAAI,EAAEL,IAAI,CAACC,SAAL,CAAegB,IAAf,CAX4B,CAWP;;AAXO,GAAN,CAA5B;AAaAL,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,SAAO,MAAMJ,QAAQ,CAACe,IAAT,EAAb,CAlBsC,CAkBR;AAC/B","sourcesContent":["var myHeaders = new Headers();\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nvar raw = JSON.stringify({\"state\":\"NY\"});\n\nvar requestOptions = {\n  method: 'GET',\n  headers: myHeaders,\n  body: raw,\n  redirect: 'follow'\n};\n\nfetch(\"localhost:8080/home\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n\n\nexport async function getState(data = {}) {\n    // Default options are marked with *\n    // console.log(data);\n    // return await fetch('http://localhost:8080/home',{ \n    //     method: 'get',\n    //     headers: {\n    //     'Accept': 'application/json, text/plain, */*',\n    //     'Content-Type': 'application/json',\n    //     },\n    //     credentials: 'same-origin',\n    //     body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n    // }).then(res => res.json());\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    var raw = JSON.stringify({\"state\":\"NY\"});\n\n    var requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow'\n    };\n\n    fetch(\"localhost:8080/home\", requestOptions)\n    .then(response => response.text())\n    .then(result => console.log(result))\n    .catch(error => console.log('error', error));\n\n  }\n\n// Example POST method implementation:\nexport async function generateBatch(data) {\n    console.log(\"client.js\")\n    let url = 'localhost:8080/home';\n    // Default options are marked with *\n    const response = await fetch(url, {\n    method: 'POST', // *GET, POST, PUT, DELETE, etc.\n    mode: 'cors', // no-cors, *cors, same-origin\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: 'same-origin', // include, *same-origin, omit\n    headers: {\n    'Content-Type': 'application/json'\n    // 'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    redirect: 'follow', // manual, *follow, error\n    referrerPolicy: 'origin-when-cross-origin', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n    });\n    console.log(\"client.js 1\")\n    return await response.json(); // parses JSON response into native JavaScript objects\n  }\n  \n"]},"metadata":{},"sourceType":"module"}