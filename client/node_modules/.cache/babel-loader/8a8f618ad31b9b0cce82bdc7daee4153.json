{"ast":null,"code":"var _jsxFileName = \"/Users/danielhamam/Desktop/Computer_Programming/Broncos_Project/client/src/components/homePage/Main Panel/OurMap.js\";\nimport React, { Component } from 'react';\nimport { Map, TileLayer, ZoomControl, GeoJSON } from 'react-leaflet';\nimport HeatmapLayer from 'react-leaflet-heatmap-layer';\nimport { heatPoints } from './realWorldTest.js'; // import HeatmapLayer from '../src/HeatmapLayer';\n// ---------------------------------------------\n//                CALIFORNIA IMPORTS\n// ---------------------------------------------\n\nimport CaliforniaStateBoundary from '../../../json/CALIFORNIA/CaliforniaStateBoundaries.json'; // import CaliforniaDistricts from '../../../json/CALIFORNIA/CaliforniaDistricts.json'\n// import CaliforniaPrecincts from '../../../json/CALIFORNIA/CaliforniaPrecinct.json'\n// ---------------------------------------------\n//                GEORGIA IMPORTS\n// ---------------------------------------------\n\nimport GeorgiaStateBoundary from '../../../json/GEORGIA/GeorgiaStateBoundaries.json'; // import GeorgiaDistricts from  '../../../json/GEORGIA/GeorgiaDistricts.json';\n// ---------------------------------------------\n//                NEW YORK IMPORTS\n// ---------------------------------------------\n\nimport NewYorkStateBoundary from '../../../json/NEW_YORK/NewYorkStateBoundaries.json'; // import NYDistricts from '../../../json/NEW_YORK/NewYorkDistricts.json';\n\nclass OurMap extends Component {\n  constructor() {\n    super();\n    this.state = {};\n    this.mapCenter = [39, -105];\n    this.mapZoom = 5; // Map Filters\n\n    this.precinctView = false;\n    this.districtView = false;\n    this.stateView = true;\n  }\n\n  render() {\n    // Change center/zoom based on which state is selected\n    if (this.props.currentState == \"Georgia\") {\n      this.mapCenter = [32.5, -85.00078];\n      this.mapZoom = 7;\n    } else if (this.props.currentState == \"California\") {\n      this.mapCenter = [36.778259, -119.417931];\n      this.mapZoom = 6;\n    } else if (this.props.currentState == \"New York\") {\n      this.mapCenter = [42.712776, -77.005974];\n      this.mapZoom = 6.5;\n    } else {\n      this.mapCenter = [39, -105];\n      this.mapZoom = 5;\n    }\n\n    return /*#__PURE__*/React.createElement(Map, {\n      id: \"ourMap\",\n      center: this.mapCenter,\n      zoom: this.mapZoom,\n      zoomControl: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(HeatmapLayer // fitBoundsOnLoad\n    // fitBoundsOnUpdate\n    , {\n      points: heatPoints,\n      longitudeExtractor: m => m[1],\n      latitudeExtractor: m => m[0],\n      intensityExtractor: m => parseFloat(m[2]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(ZoomControl, {\n      position: \"bottomleft\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(TileLayer, {\n      attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(GeoJSON, {\n      weight: \"1\",\n      color: \"red\",\n      key: \"California\",\n      data: CaliforniaStateBoundary,\n      onClick: () => this.props.changeCurrentState(\"California\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(GeoJSON, {\n      weight: \"1\",\n      color: \"red\",\n      key: \"Georgia\",\n      data: GeorgiaStateBoundary,\n      onClick: () => this.props.changeCurrentState(\"Georgia\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(GeoJSON, {\n      weight: \"1\",\n      color: \"red\",\n      key: \"NewYork\",\n      data: NewYorkStateBoundary,\n      onClick: () => this.props.changeCurrentState(\"New York\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }));\n  }\n\n}\n\nexport default OurMap;","map":{"version":3,"sources":["/Users/danielhamam/Desktop/Computer_Programming/Broncos_Project/client/src/components/homePage/Main Panel/OurMap.js"],"names":["React","Component","Map","TileLayer","ZoomControl","GeoJSON","HeatmapLayer","heatPoints","CaliforniaStateBoundary","GeorgiaStateBoundary","NewYorkStateBoundary","OurMap","constructor","state","mapCenter","mapZoom","precinctView","districtView","stateView","render","props","currentState","m","parseFloat","changeCurrentState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Map, TileLayer, ZoomControl, GeoJSON} from 'react-leaflet';\nimport HeatmapLayer from 'react-leaflet-heatmap-layer';\nimport { heatPoints } from './realWorldTest.js';\n// import HeatmapLayer from '../src/HeatmapLayer';\n\n// ---------------------------------------------\n//                CALIFORNIA IMPORTS\n// ---------------------------------------------\n\nimport CaliforniaStateBoundary from '../../../json/CALIFORNIA/CaliforniaStateBoundaries.json'\n// import CaliforniaDistricts from '../../../json/CALIFORNIA/CaliforniaDistricts.json'\n// import CaliforniaPrecincts from '../../../json/CALIFORNIA/CaliforniaPrecinct.json'\n\n// ---------------------------------------------\n//                GEORGIA IMPORTS\n// ---------------------------------------------\n\nimport GeorgiaStateBoundary from '../../../json/GEORGIA/GeorgiaStateBoundaries.json';\n// import GeorgiaDistricts from  '../../../json/GEORGIA/GeorgiaDistricts.json';\n\n// ---------------------------------------------\n//                NEW YORK IMPORTS\n// ---------------------------------------------\nimport NewYorkStateBoundary from '../../../json/NEW_YORK/NewYorkStateBoundaries.json';\n// import NYDistricts from '../../../json/NEW_YORK/NewYorkDistricts.json';\n\nclass OurMap extends Component {\n    constructor () {\n        super();\n        this.state = {}\n\n        this.mapCenter = [39, -105];\n        this.mapZoom = 5;\n\n        // Map Filters\n        this.precinctView = false;\n        this.districtView = false;\n        this.stateView = true;\n    }\n\n    render() {\n\n        // Change center/zoom based on which state is selected\n        if (this.props.currentState == \"Georgia\") {\n            this.mapCenter = [32.5, -85.00078];\n            this.mapZoom = 7;\n        }\n        else if (this.props.currentState == \"California\") {\n            this.mapCenter = [36.778259, -119.417931];\n            this.mapZoom = 6;\n        }\n        else if (this.props.currentState == \"New York\") {\n            this.mapCenter = [42.712776, -77.005974];\n            this.mapZoom = 6.5;\n        }\n        else {\n            this.mapCenter = [39, -105];\n            this.mapZoom = 5;\n        }\n\n        return(\n                <Map id=\"ourMap\" center={this.mapCenter} zoom={this.mapZoom} zoomControl={false}>\n                    <HeatmapLayer\n                                // fitBoundsOnLoad\n                                // fitBoundsOnUpdate\n                                points={heatPoints}\n                                longitudeExtractor={m => m[1]}\n                                latitudeExtractor={m => m[0]}\n                                intensityExtractor={m => parseFloat(m[2])} \n                    />\n                    <ZoomControl position = 'bottomleft'> </ZoomControl>\n                <TileLayer\n                    attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n\n                    {/* <GeoJSON weight=\"1\" color=\"red\" key=\"California\" data={CaliforniaStateBoundary} onClick={ () => this.props.changeCurrentState(\"California\")}/>  */}\n                    {/* <GeoJSON key=\"California\" data={CaliforniaDistricts} onClick={ () => this.props.changeCurrentState(\"California\")}/>   */}\n                    <GeoJSON weight=\"1\" color=\"red\" key=\"California\" data={CaliforniaStateBoundary} onClick={ () => this.props.changeCurrentState(\"California\")}/> \n                    \n                    <GeoJSON weight=\"1\" color=\"red\" key=\"Georgia\" data={GeorgiaStateBoundary} onClick={ () => this.props.changeCurrentState(\"Georgia\")} />\n                    {/* <GeoJSON key='Georgia' data={GeorgiaPrecincts} /> */}\n                    {/* <GeoJSON key='Georgia' data={GeorgiaDistricts} onClick={ () => this.props.changeCurrentState(\"Georgia\")}/>  /> */}\n\n                    <GeoJSON weight=\"1\" color=\"red\" key='NewYork' data={NewYorkStateBoundary} onClick={ () => this.props.changeCurrentState(\"New York\")}/>\n                    {/* <GeoJSON key='NewYorkDistricts' data={NYSAssemblyDistricts} /> */}\n                    {/* <GeoJSON key='NewYorkDistricts' data={NewYorkDistricts} />  */}\n                    {/* <GeoJSON key='NewYork' data={NYDistricts} onClick={ () => this.props.changeCurrentState(\"New York\")}/> */}\n\n                </Map> \n            );\n        }\n}\n\nexport default OurMap;"]},"metadata":{},"sourceType":"module"}