{"ast":null,"code":"var _jsxFileName = \"/Users/danielhamam/Desktop/Computer_Programming/Broncos_Project/client/src/components/homePage/Main Panel/Sidebar.js\";\nimport { Dropdown, DropdownButton, ButtonGroup, Tabs, Tab } from 'react-bootstrap';\nimport React, { Component } from 'react';\nimport { ProSidebar, Menu, MenuItem, SubMenu, SidebarHeader } from 'react-pro-sidebar';\nimport usaFlag from \"./usaFlag.png\";\nimport blackBackground from \"./blackBackground.jpg\";\nimport YourBatches from './BatchCards/YourBatches';\nimport YourDistrictingPlans from './DistrictingPlans/YourDistrictingPlans';\nimport InputsBatch from './GenerateBatch/InputsBatch';\nimport GraphDisplay from './GraphDisplay/GraphDisplay';\nimport ModalGraph from './GraphDisplay/ModalGraph';\n\nclass Sidebar extends Component {\n  constructor() {\n    super();\n\n    this.toggleModalGraph = () => {\n      // console.log(this.state.selectedFilters);\n      if (this.state.modalOpen == false) this.setState({\n        modalOpen: true\n      });else this.setState({\n        modalOpen: false\n      });\n    };\n\n    this.toggleCollapse = () => {\n      if (this.state.statusCollapsed == false) {\n        // First, Let's toggle hiding the header\n        if (this.state.hideSidebarHeader == false) {\n          document.getElementById(\"sidebarHeader\").style.visibility = \"hidden\";\n          this.setState({\n            hideSidebarHeader: true\n          });\n        } else {\n          document.getElementById(\"sidebarHeader\").style.visibility = \"visible\";\n          this.setState({\n            hideSidebarHeader: false\n          });\n        }\n\n        ; //  Let's toggle the visibility of the rest\n\n        this.setState({\n          statusCollapsed: true\n        });\n        document.getElementById(\"collapseButtonRight\").style.visibility = \"visible\";\n        document.getElementById(\"collapseButtonLeft\").style.visibility = \"hidden\";\n        document.getElementById(\"collapseButtonLeft\").style.display = \"none\";\n      } else {\n        // First, Let's toggle hiding the header\n        if (this.state.hideSidebarHeader == false) {\n          document.getElementById(\"sidebarHeader\").style.visibility = \"hidden\";\n          this.setState({\n            hideSidebarHeader: true\n          });\n        } else {\n          document.getElementById(\"sidebarHeader\").style.visibility = \"visible\";\n          this.setState({\n            hideSidebarHeader: false\n          });\n        }\n\n        ; //  Let's toggle the visibility of the rest\n\n        this.setState({\n          statusCollapsed: false\n        });\n        document.getElementById(\"collapseButtonRight\").style.visibility = \"hidden\";\n        document.getElementById(\"collapseButtonLeft\").style.visibility = \"visible\";\n        document.getElementById(\"collapseButtonLeft\").style.display = \"\";\n      }\n    };\n\n    this.state = {\n      currentState: \"Select a state\",\n      statusCollapsed: false,\n      hideSidebarHeader: false,\n      collapsedIconLeft: false,\n      collapsedIconRight: false,\n      selectedFilters: null,\n      // Graph Panel\n      modalOpen: false // for graph panel\n\n    };\n  }\n\n  changeCurrentStatefromSidebar(selection) {\n    this.setState({\n      currentState: selection\n    });\n    this.props.changeCurrentStatefromSidebar(selection);\n  }\n\n  render() {\n    if (this.state.selectedFilters != this.props.selectedFilters) this.setState({\n      selectedFilters: this.props.selectedFilters\n    }); // If changed from map\n\n    if (this.state.currentState != this.props.currentState) this.setState({\n      currentState: this.props.currentState\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"mainSidebar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ProSidebar, {\n      image: blackBackground,\n      collapsed: this.state.statusCollapsed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(SidebarHeader, {\n      id: \"sidebarHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      id: \"collapseButtonLeft\",\n      className: \"fa fa-angle-double-left\",\n      onClick: this.toggleCollapse,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 29\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(\"i\", {\n      id: \"collapseButtonRight\",\n      className: \"fa fa-angle-double-right\",\n      onClick: this.toggleCollapse,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 29\n      }\n    }, \"  \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      id: \"usaFlag\",\n      src: usaFlag,\n      alt: \"logo\",\n      style: {\n        width: '45px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"currentState\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 41\n      }\n    }, \" Current State: \"), /*#__PURE__*/React.createElement(DropdownButton, {\n      as: ButtonGroup,\n      id: \"dropdownButton\",\n      title: this.state.currentState,\n      size: \"sm\",\n      variant: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n      className: \"stateSelect\",\n      key: \"California\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      onClick: e => this.changeCurrentStatefromSidebar(e.target.textContent),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 49\n      }\n    }, \"California\")), /*#__PURE__*/React.createElement(Dropdown.Item, {\n      className: \"stateSelect\",\n      key: \"Georgia\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      onClick: e => this.changeCurrentStatefromSidebar(e.target.textContent),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 49\n      }\n    }, \"Georgia\")), /*#__PURE__*/React.createElement(Dropdown.Item, {\n      className: \"stateSelect\",\n      key: \"NewYork\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      onClick: e => this.changeCurrentStatefromSidebar(e.target.textContent),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 49\n      }\n    }, \"New York\")))))), /*#__PURE__*/React.createElement(Menu, {\n      id: \"menuofCategories\",\n      iconShape: \"square\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(SubMenu, {\n      icon: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 48\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-home\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 54\n        }\n      }, \" \"), \" \"),\n      title: /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 102\n        }\n      }, \" State Details\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 37\n      }\n    }, \"Population: \"), /*#__PURE__*/React.createElement(MenuItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 37\n      }\n    }, \"Number of Precincts: \"), /*#__PURE__*/React.createElement(MenuItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 37\n      }\n    }, \"Number of Counties: \"), /*#__PURE__*/React.createElement(MenuItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 37\n      }\n    }, \"Number of Districts: \"), /*#__PURE__*/React.createElement(MenuItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 37\n      }\n    }, \"Majority-minority districts: \")), /*#__PURE__*/React.createElement(SubMenu, {\n      id: \"yourBatchesWrapper\",\n      icon: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 72\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-briefcase\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 78\n        }\n      }, \" \"), \" \"),\n      title: /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 131\n        }\n      }, \" Your Batches\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(YourBatches, {\n      selectedBatchCheck: this.props.selectedBatchCheck,\n      toggleSelectedBatchCheck: this.props.toggleSelectedBatchCheck,\n      updateCurrentBatchName: this.props.updateCurrentBatchName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(SubMenu, {\n      icon: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 48\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-bars\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 54\n        }\n      }, \" \"), \" \"),\n      title: /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 102\n        }\n      }, \" District Plans\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(YourDistrictingPlans, {\n      selectedPlanCheck: this.props.selectedPlanCheck,\n      toggleSelectedPlanCheck: this.props.toggleSelectedPlanCheck,\n      currentBatchName: this.props.currentBatchName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(SubMenu, {\n      icon: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 48\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-edit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 54\n        }\n      }, \" \"), \" \"),\n      title: /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 102\n        }\n      }, \" Generate Batch Plan\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InputsBatch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(SubMenu, {\n      icon: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 48\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-connectdevelop\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 54\n        }\n      }, \" \"), \" \"),\n      title: /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 112\n        }\n      }, \" Display Graph Panel\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"plotView1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.toggleModalGraph,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 41\n      }\n    }, \" Display Graph \"), /*#__PURE__*/React.createElement(ModalGraph, {\n      toggleModal: this.toggleModalGraph,\n      showModal: this.state.modalOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 41\n      }\n    }, \" \"))))))\n    /* <!-- Sidebar --> */\n    ;\n  }\n\n}\n\nexport default Sidebar;","map":{"version":3,"sources":["/Users/danielhamam/Desktop/Computer_Programming/Broncos_Project/client/src/components/homePage/Main Panel/Sidebar.js"],"names":["Dropdown","DropdownButton","ButtonGroup","Tabs","Tab","React","Component","ProSidebar","Menu","MenuItem","SubMenu","SidebarHeader","usaFlag","blackBackground","YourBatches","YourDistrictingPlans","InputsBatch","GraphDisplay","ModalGraph","Sidebar","constructor","toggleModalGraph","state","modalOpen","setState","toggleCollapse","statusCollapsed","hideSidebarHeader","document","getElementById","style","visibility","display","currentState","collapsedIconLeft","collapsedIconRight","selectedFilters","changeCurrentStatefromSidebar","selection","props","render","width","e","target","textContent","selectedBatchCheck","toggleSelectedBatchCheck","updateCurrentBatchName","selectedPlanCheck","toggleSelectedPlanCheck","currentBatchName"],"mappings":"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","sourcesContent":["import {Dropdown, DropdownButton, ButtonGroup, Tabs, Tab} from 'react-bootstrap';\nimport React, {Component} from 'react';\nimport { ProSidebar, Menu, MenuItem, SubMenu, SidebarHeader } from 'react-pro-sidebar';\nimport usaFlag from \"./usaFlag.png\"\nimport blackBackground from \"./blackBackground.jpg\"\nimport YourBatches from './BatchCards/YourBatches'\nimport YourDistrictingPlans from './DistrictingPlans/YourDistrictingPlans'\nimport InputsBatch from './GenerateBatch/InputsBatch';\nimport GraphDisplay from './GraphDisplay/GraphDisplay'\nimport ModalGraph from './GraphDisplay/ModalGraph'\n\nclass Sidebar extends Component {\n    constructor () {\n        super();\n        this.state = { \n            currentState : \"Select a state\",\n            statusCollapsed : false,\n            hideSidebarHeader : false,\n            collapsedIconLeft : false,\n            collapsedIconRight : false,\n            selectedFilters : null,\n\n            // Graph Panel\n            modalOpen : false, // for graph panel\n\n        }\n    }\n\n    changeCurrentStatefromSidebar(selection) {\n        this.setState({currentState: selection})\n        this.props.changeCurrentStatefromSidebar(selection);\n    }\n\n    toggleModalGraph = () => {\n        // console.log(this.state.selectedFilters);\n        if (this.state.modalOpen == false) this.setState({modalOpen : true});\n        else this.setState({modalOpen : false});\n    }\n\n    toggleCollapse = () => {\n        if (this.state.statusCollapsed == false) {\n\n            // First, Let's toggle hiding the header\n\n            if (this.state.hideSidebarHeader == false) {\n                document.getElementById(\"sidebarHeader\").style.visibility = \"hidden\";\n                this.setState({hideSidebarHeader : true});\n            }\n            else {\n                document.getElementById(\"sidebarHeader\").style.visibility = \"visible\";\n                this.setState({hideSidebarHeader : false})\n            };\n\n            //  Let's toggle the visibility of the rest\n\n            this.setState({statusCollapsed: true})\n            document.getElementById(\"collapseButtonRight\").style.visibility = \"visible\";\n            document.getElementById(\"collapseButtonLeft\").style.visibility = \"hidden\";\n            document.getElementById(\"collapseButtonLeft\").style.display = \"none\";\n        }\n        else {\n\n            // First, Let's toggle hiding the header\n\n            if (this.state.hideSidebarHeader == false) {\n                document.getElementById(\"sidebarHeader\").style.visibility = \"hidden\";\n                this.setState({hideSidebarHeader : true});\n            }\n            else {\n                document.getElementById(\"sidebarHeader\").style.visibility = \"visible\";\n                this.setState({hideSidebarHeader : false})\n            };\n\n            //  Let's toggle the visibility of the rest\n\n            this.setState({statusCollapsed : false})\n            document.getElementById(\"collapseButtonRight\").style.visibility = \"hidden\";\n            document.getElementById(\"collapseButtonLeft\").style.visibility = \"visible\";\n            document.getElementById(\"collapseButtonLeft\").style.display = \"\";\n        }\n    }\n\n    render() {\n\n        if (this.state.selectedFilters != this.props.selectedFilters) this.setState({selectedFilters : this.props.selectedFilters});\n\n        // If changed from map\n        if (this.state.currentState != this.props.currentState) this.setState({currentState : this.props.currentState});\n\n        return (\n                <div id=\"mainSidebar\" >\n                    <ProSidebar image={blackBackground} collapsed={this.state.statusCollapsed} >\n                        <SidebarHeader id=\"sidebarHeader\"> \n                            <i id=\"collapseButtonLeft\" className=\"fa fa-angle-double-left\" onClick={this.toggleCollapse}> </i>\n                            <i id=\"collapseButtonRight\" className=\"fa fa-angle-double-right\" onClick={this.toggleCollapse}> </i>\n                            <div className=\"row col-md-12\">  {/* Holds Flag, \"Current State\", and Selection of State */}\n                                <br />\n                                    <div className=\"col-md-4\"> \n                                        <img id=\"usaFlag\" src={usaFlag} alt=\"logo\" style={{ width: '45px'}}/> \n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <div id=\"currentState\"> Current State: </div>\n                                        <DropdownButton as={ButtonGroup} id=\"dropdownButton\" title={this.state.currentState} size=\"sm\" variant=\"secondary\">\n                                            <Dropdown.Item className=\"stateSelect\" key=\"California\">\n                                                <div onClick={(e) => this.changeCurrentStatefromSidebar(e.target.textContent)}>California</div> \n                                            </Dropdown.Item>\n                                            <Dropdown.Item className=\"stateSelect\" key=\"Georgia\">\n                                                <div onClick={(e) => this.changeCurrentStatefromSidebar(e.target.textContent)}>Georgia</div> \n                                            </Dropdown.Item>\n                                            <Dropdown.Item className=\"stateSelect\" key=\"NewYork\">\n                                                <div onClick={(e) => this.changeCurrentStatefromSidebar(e.target.textContent)}>New York</div> \n                                            </Dropdown.Item>\n                                        </DropdownButton>\n                                    </div>\n                            </div>\n                        </SidebarHeader>\n\n                        <Menu id=\"menuofCategories\" iconShape=\"square\" >\n\n                            {/* -------------------------- */}\n                            {/* -------------------------- */}\n                                {/* STATE DETAILS */}\n                            {/* -------------------------- */}\n                            {/* -------------------------- */}\n\n                                <SubMenu icon={<div> <i className=\"fa fa-home\" > </i> </div>} title={<b> State Details</b>}> \n                                    <MenuItem>Population: </MenuItem>\n                                    <MenuItem>Number of Precincts: </MenuItem>\n                                    <MenuItem>Number of Counties: </MenuItem>\n                                    <MenuItem>Number of Districts: </MenuItem>\n                                    {/* <MenuItem>Efficiency Gap: </MenuItem> */}\n                                    {/* <MenuItem>Competitive Districts: </MenuItem> */}\n                                    <MenuItem>Majority-minority districts: </MenuItem>\n                                    {/* <MenuItem>County Splits: </MenuItem> */}\n                                    {/* <MenuItem>Compactness Rank: </MenuItem> */}\n                                </SubMenu>\n\n                            {/* -------------------------- */}\n                            {/* -------------------------- */}\n                                {/* YOUR BATCHES */}\n                            {/* -------------------------- */}\n                            {/* -------------------------- */}\n\n                                <SubMenu id=\"yourBatchesWrapper\" icon={<div> <i className=\"fa fa-briefcase\" > </i> </div>} title={<b> Your Batches</b>} >\n                                        <YourBatches selectedBatchCheck={this.props.selectedBatchCheck} toggleSelectedBatchCheck={this.props.toggleSelectedBatchCheck} updateCurrentBatchName={this.props.updateCurrentBatchName} />\n                                </SubMenu>\n\n                            {/* -------------------------- */}\n                            {/* -------------------------- */}\n                                {/* DISTRICT PLANS*/}\n                            {/* -------------------------- */}\n                            {/* -------------------------- */}\n\n                                <SubMenu icon={<div> <i className=\"fa fa-bars\" > </i> </div>} title={<b> District Plans</b>} >\n                                    <YourDistrictingPlans selectedPlanCheck={this.props.selectedPlanCheck} toggleSelectedPlanCheck={this.props.toggleSelectedPlanCheck} currentBatchName={this.props.currentBatchName}/>\n                                </SubMenu>\n\n                            {/* -------------------------- */}\n                            {/* -------------------------- */}\n                                {/* GENERATE BATCH PLAN */}\n                            {/* -------------------------- */}\n                            {/* -------------------------- */}\n\n                                <SubMenu icon={<div> <i className=\"fa fa-edit\" > </i> </div>} title={<b> Generate Batch Plan</b>} >\n                                    {/* <MenuItem>Component 1</MenuItem>\n                                    <MenuItem>Component 2</MenuItem> */}\n                                    <InputsBatch />\n                                </SubMenu>\n\n                            {/* -------------------------- */}\n                            {/* -------------------------- */}\n                                {/* DISPLAY GRAPH PANEL */}\n                            {/* -------------------------- */}\n                            {/* -------------------------- */}\n\n                                <SubMenu icon={<div> <i className=\"fa fa-connectdevelop\" > </i> </div>} title={<b> Display Graph Panel</b>} >\n                                    <div className=\"plotView1\">\n                                        <button onClick={this.toggleModalGraph}> Display Graph </button>\n                                        <ModalGraph toggleModal ={this.toggleModalGraph} showModal={this.state.modalOpen} > </ModalGraph>\n                                        {/* <GraphDisplay selectedFilters={this.state.selectedFilters} currentState={this.state.currentState}/> */}\n                                    </div>\n                                </SubMenu>\n                            </Menu>\n                    </ProSidebar> \n                </div>\n/* <!-- Sidebar --> */\n        );\n    }\n}\n\nexport default Sidebar;"]},"metadata":{},"sourceType":"module"}