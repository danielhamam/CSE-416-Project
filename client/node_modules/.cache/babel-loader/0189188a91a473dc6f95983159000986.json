{"ast":null,"code":"var myHeaders = new Headers();\nmyHeaders.append(\"Content-Type\", \"application/json\");\nvar raw = JSON.stringify({\n  \"state\": \"NY\"\n});\nvar requestOptions = {\n  method: 'GET',\n  headers: myHeaders,\n  body: raw,\n  redirect: 'follow'\n};\nfetch(\"localhost:8080/home\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error));\nexport const getState = () => {\n  // Default options are marked with *\n  console.log(\"asdf\"); // return await fetch('http://localhost:8080/home',{ \n  //     method: 'get',\n  //     headers: {\n  //     'Accept': 'application/json, text/plain, */*',\n  //     'Content-Type': 'application/json',\n  //     },\n  //     credentials: 'same-origin',\n  //     body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n  // }).then(res => res.json());\n\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  myHeaders.append(\"Access-Control-Allow-Origin\", \"*\");\n  var raw = JSON.stringify({\n    \"state\": \"NY\"\n  });\n  var requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    redirect: 'follow',\n    mode: 'cors'\n  };\n  const a = fetch(\"http://localhost:8080/home\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error and here is it:', error));\n}; // Example POST method implementation:\n\nexport const generateBatch = data => {\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  myHeaders.append(\"Access-Control-Allow-Origin\", \"*\");\n  console.log(\"client.js\");\n  let url = 'localhost:8080/home';\n  var raw = JSON.stringify({\n    \"numberOfDistricting\": 10,\n    \"name\": \"batch1\",\n    \"isAvailable\": false,\n    \"populationDifference\": 10.0,\n    \"compactness\": 10.0\n  });\n  var requestOptions = {\n    method: 'POST',\n    // *GET, POST, PUT, DELETE, etc.\n    mode: 'cors',\n    // no-cors, *cors, same-origin\n    headers: myHeaders,\n    body: raw // body data type must match \"Content-Type\" header\n\n  };\n  console.log(raw); // Default options are marked with *\n\n  const a = fetch(\"http://localhost:8080/home\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error and here is it:', error)); // return await response.json(); // parses JSON response into native JavaScript objects\n};","map":{"version":3,"sources":["/Users/carloslopez/Desktop/SCHOOL/ComputerScience/CSE416/CSE-416-Project/client/src/endpoint/Client.js"],"names":["myHeaders","Headers","append","raw","JSON","stringify","requestOptions","method","headers","body","redirect","fetch","then","response","text","result","console","log","catch","error","getState","mode","a","generateBatch","data","url"],"mappings":"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","sourcesContent":["var myHeaders = new Headers();\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nvar raw = JSON.stringify({\"state\":\"NY\"});\n\nvar requestOptions = {\n  method: 'GET',\n  headers: myHeaders,\n  body: raw,\n  redirect: 'follow'\n};\n\nfetch(\"localhost:8080/home\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n\n\nexport const getState = () => {\n    // Default options are marked with *\n    console.log(\"asdf\");\n    // return await fetch('http://localhost:8080/home',{ \n    //     method: 'get',\n    //     headers: {\n    //     'Accept': 'application/json, text/plain, */*',\n    //     'Content-Type': 'application/json',\n    //     },\n    //     credentials: 'same-origin',\n    //     body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n    // }).then(res => res.json());\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    myHeaders.append(\"Access-Control-Allow-Origin\", \"*\");\n\n    var raw = JSON.stringify({\"state\":\"NY\"});\n\n    var requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    redirect: 'follow',\n    mode: 'cors',\n    \n    };\n\n    const a = fetch(\"http://localhost:8080/home\", requestOptions)\n    .then(response => response.text())\n    .then(result => console.log(result))\n    .catch(error => console.log('error and here is it:', error));\n\n\n  }\n\n// Example POST method implementation:\nexport const generateBatch = (data) => {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    myHeaders.append(\"Access-Control-Allow-Origin\", \"*\");\n    console.log(\"client.js\")\n    let url = 'localhost:8080/home';\n\n    var raw = JSON.stringify({\n        \"numberOfDistricting\" : 10,\n        \"name\": \"batch1\",\n        \"isAvailable\": false,\n        \"populationDifference\": 10.0,\n        \"compactness\": 10.0,\n    });\n\n    var requestOptions = {\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\n        mode: 'cors', // no-cors, *cors, same-origin\n        headers: myHeaders,\n        body: raw // body data type must match \"Content-Type\" header\n    }\n    \n    console.log(raw);\n    // Default options are marked with *\n    const a = fetch(\"http://localhost:8080/home\", requestOptions)\n    .then(response => response.text())\n    .then(result => console.log(result))\n    .catch(error => console.log('error and here is it:', error));\n\n    // return await response.json(); // parses JSON response into native JavaScript objects\n  }\n  \n"]},"metadata":{},"sourceType":"module"}