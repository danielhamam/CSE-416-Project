{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mdari\\\\Desktop\\\\416 Project\\\\CSE-416-Project\\\\client\\\\src\\\\components\\\\homePage\\\\Main Panel\\\\GenerateJob\\\\InputsJob.js\";\nimport React, { Component } from 'react';\nimport RangeSlider from 'react-bootstrap-range-slider';\nimport { Form } from 'react-bootstrap';\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\n\nclass InputsJob extends Component {\n  constructor() {\n    super();\n\n    this.changeJobName = e => this.setState({\n      jobName: e.target.value\n    });\n\n    this.changePlanAmount = e => this.setState({\n      plansAmount: e.target.value\n    });\n\n    this.changeCompactness = e => {\n      this.setState({\n        compactness: [{\n          label: e.label,\n          value: null\n        }]\n      });\n    };\n\n    this.changePopulationDifference = e => this.setState({\n      populationDifference: e.target.value\n    });\n\n    this.changeMinorityAnalyzed = e => this.setState({\n      minorityAnalyzed: e\n    });\n\n    this.handleGenerateJob = e => {\n      e.preventDefault();\n      let foundEmpty = 0; // Check if fields are entered:\n\n      if (this.state.compactness == '') {\n        this.setState({\n          compactnessError: \"Required!\"\n        });\n        foundEmpty = 1;\n      }\n\n      if (this.state.minorityAnalyzed == '') {\n        this.setState({\n          minorityAnalyzedError: \"Required!\"\n        });\n        foundEmpty = 1;\n      }\n\n      if (this.state.jobName == '') {\n        this.setState({\n          jobNameError: \"Required!\"\n        });\n        foundEmpty = 1;\n      }\n\n      if (!this.state.compactness == '') this.setState({\n        compactnessError: null\n      });\n      if (!this.state.minorityAnalyzed == '') this.setState({\n        minorityAnalyzedError: null\n      });\n      if (!this.state.jobName == '') this.setState({\n        jobNameError: null\n      });\n      if (foundEmpty == 1) return;\n      var string_plansAmount = this.state.plansAmount.toString();\n      var string_populationDifference = this.state.populationDifference.toString();\n      let valuesMinorities = [];\n      this.state.minorityAnalyzed.forEach(element => {\n        valuesMinorities.push(element.value);\n      });\n      let userInputs = {\n        jobName: this.state.jobName,\n        plansAmount: string_plansAmount,\n        compactness: this.state.compactness[0].label,\n        populationDifference: string_populationDifference,\n        minorityAnalyzed: valuesMinorities\n      };\n      this.props.createJob(userInputs); // RESET ALL INPUTS\n\n      this.setState({\n        jobName: ''\n      });\n      this.setState({\n        districtsAmount: 0\n      });\n      this.setState({\n        plansAmount: 0\n      });\n      this.setState({\n        compactness: ''\n      });\n      this.setState({\n        populationDifference: 0\n      });\n      this.setState({\n        minorityAnalyzed: ''\n      });\n    };\n\n    this.state = {\n      // Inputs\n      jobName: '',\n      plansAmount: 0,\n      compactness: '',\n      populationDifference: 0,\n      minorityAnalyzed: '',\n      // Errors\n      jobNameError: null,\n      compactnessError: null,\n      minorityAnalyzedError: null\n    };\n  }\n\n  render() {\n    const componentsAnimation = makeAnimated();\n    const minorityOptions = [{\n      label: \"Ethnicity\",\n      options: [{\n        label: \"White\",\n        value: \"WHITE_AMERICAN\"\n      }, {\n        label: \"African American\",\n        value: \"AFRICAN_AMERICAN\"\n      }, {\n        label: \"Latino\",\n        value: \"LATINO_AMERICAN\"\n      }, {\n        label: \"Asian\",\n        value: \"ASIAN_AMERICAN\"\n      }, {\n        label: \"American Indian\",\n        value: \"AMERICAN_INDIAN\"\n      }, {\n        label: \"Hawaiian\",\n        value: \"HAWAIIAN_AMERICAN\"\n      }, {\n        label: \"Other\",\n        value: \"OTHER_AMERICAN\"\n      }]\n    }];\n    const compactnessOptions = [{\n      label: \"Measurement\",\n      options: [{\n        label: \"LOW\",\n        value: \"0\"\n      }, {\n        label: \"MEDIUM\",\n        value: \"50\"\n      }, {\n        label: \"HIGH\",\n        value: \"100\"\n      }]\n    }];\n    return /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"exampleInputEmail1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }, \" Districting Plans (#): \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      size: \"sm\",\n      value: this.state.plansAmount,\n      onChange: this.changePlanAmount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rangeSliderContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(RangeSlider, {\n      className: \"rangeSlider\",\n      disabled: false,\n      onChange: this.changePlanAmount,\n      step: 1,\n      min: 0,\n      max: 5000,\n      tooltip: \"auto\",\n      value: this.state.plansAmount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errorStyle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 33\n      }\n    }, \" \", this.state.plansAmountError, \" \")))), /*#__PURE__*/React.createElement(\"small\", {\n      className: \"form-text text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, \"Enter the amount of district plans you would like to generate. The current limit is 5000. \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"exampleInputEmail1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }, \" Population Difference Limit (%): \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      size: \"sm\",\n      value: this.state.populationDifference,\n      onChange: this.changePopulationDifference,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rangeSliderContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(RangeSlider, {\n      className: \"rangeSlider\",\n      disabled: false,\n      onChange: this.changePopulationDifference,\n      step: 0.1,\n      min: 0,\n      max: 1.7,\n      tooltip: \"auto\",\n      value: this.state.populationDifference,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errorStyle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 33\n      }\n    }, \" \", this.state.populationDifferenceError, \" \")))), /*#__PURE__*/React.createElement(\"small\", {\n      className: \"form-text text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    }, \" Enter the limit as measured by the difference between the most populous district and the least populous district. \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"exampleInputEmail1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }, \" Compactness Preference: \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"compactnessStyle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      isSearchable: true,\n      onChange: this.changeCompactness,\n      value: this.state.compactness,\n      placeholder: \"Compactness Measure\",\n      components: componentsAnimation,\n      className: \"basic-multi-select\",\n      options: compactnessOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errorStyle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 25\n      }\n    }, \" \", this.state.compactnessError, \" \")), /*#__PURE__*/React.createElement(\"small\", {\n      className: \"form-text text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }\n    }, \" Enter the compactness preference for your district plans. \")), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }\n    }, \" Minority Focus Group(s): \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"minorityFocusStyle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      onChange: this.changeMinorityAnalyzed,\n      value: this.state.minorityAnalyzed,\n      isSearchable: true,\n      placeholder: \"Minority group(s)\",\n      components: componentsAnimation,\n      className: \"basic-multi-select\",\n      options: minorityOptions,\n      isMulti: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errorStyle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 25\n      }\n    }, \" \", this.state.minorityAnalyzedError, \" \")), /*#__PURE__*/React.createElement(\"small\", {\n      className: \"form-text text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }\n    }, \" Select the minority group(s) in the dropdown to particularly analyze. \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 25\n      }\n    }, \"Job Name:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"customJobNameContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 25\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input-normal form-control\",\n      maxlength: 11,\n      placeholder: \"Custom Job Name\",\n      value: this.state.jobName,\n      onChange: this.changeJobName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 66\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errorStyle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 25\n      }\n    }, \" \", this.state.jobNameError, \" \")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.handleGenerateJob,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }\n    }, \"Generate\"));\n  }\n\n}\n\nexport default InputsJob;","map":{"version":3,"sources":["C:/Users/mdari/Desktop/416 Project/CSE-416-Project/client/src/components/homePage/Main Panel/GenerateJob/InputsJob.js"],"names":["React","Component","RangeSlider","Form","Select","makeAnimated","InputsJob","constructor","changeJobName","e","setState","jobName","target","value","changePlanAmount","plansAmount","changeCompactness","compactness","label","changePopulationDifference","populationDifference","changeMinorityAnalyzed","minorityAnalyzed","handleGenerateJob","preventDefault","foundEmpty","state","compactnessError","minorityAnalyzedError","jobNameError","string_plansAmount","toString","string_populationDifference","valuesMinorities","forEach","element","push","userInputs","props","createJob","districtsAmount","render","componentsAnimation","minorityOptions","options","compactnessOptions","plansAmountError","populationDifferenceError"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport RangeSlider from 'react-bootstrap-range-slider';\r\nimport {Form} from 'react-bootstrap';\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\n\r\nclass InputsJob extends Component {\r\n    constructor () {\r\n        super();\r\n        this.state = {\r\n\r\n            // Inputs\r\n            jobName : '', \r\n            plansAmount : 0, \r\n            compactness : '',\r\n            populationDifference : 0,\r\n            minorityAnalyzed : '',\r\n\r\n            // Errors\r\n            jobNameError : null,\r\n            compactnessError : null,\r\n            minorityAnalyzedError : null\r\n        }\r\n    }\r\n\r\n    changeJobName = (e) => this.setState({jobName : e.target.value});\r\n    changePlanAmount = (e) => this.setState({plansAmount : e.target.value});\r\n    changeCompactness = (e) => {\r\n        this.setState({compactness : [{\r\n            label : e.label,\r\n            value : null\r\n        }]\r\n    })}\r\n    changePopulationDifference = (e) => this.setState({populationDifference: e.target.value});\r\n    changeMinorityAnalyzed = (e) => this.setState({minorityAnalyzed : e}); \r\n\r\n    handleGenerateJob = (e) => {\r\n        e.preventDefault(); \r\n        let foundEmpty = 0;\r\n\r\n        // Check if fields are entered:\r\n        if (this.state.compactness == '') { this.setState({ compactnessError : \"Required!\"}); foundEmpty = 1 }\r\n        if (this.state.minorityAnalyzed == '') { this.setState({ minorityAnalyzedError : \"Required!\"}); foundEmpty = 1 }\r\n        if (this.state.jobName== '') { this.setState({ jobNameError : \"Required!\"}); foundEmpty = 1 }\r\n\r\n        if (!this.state.compactness == '') this.setState({ compactnessError : null});\r\n        if (!this.state.minorityAnalyzed == '') this.setState({ minorityAnalyzedError : null});\r\n        if (!this.state.jobName== '') this.setState({ jobNameError : null});\r\n\r\n        if (foundEmpty == 1) return\r\n\r\n        var string_plansAmount = this.state.plansAmount.toString();\r\n        var string_populationDifference = this.state.populationDifference.toString();\r\n        let valuesMinorities = [];\r\n        this.state.minorityAnalyzed.forEach(element => { valuesMinorities.push(element.value); })\r\n        let userInputs = {\r\n            jobName : this.state.jobName, \r\n            plansAmount :string_plansAmount, \r\n            compactness : this.state.compactness[0].label, \r\n            populationDifference : string_populationDifference,\r\n            minorityAnalyzed : valuesMinorities\r\n        }\r\n        this.props.createJob(userInputs)\r\n        // RESET ALL INPUTS\r\n        this.setState({jobName : ''})\r\n        this.setState({districtsAmount : 0})\r\n        this.setState({plansAmount : 0})\r\n        this.setState({compactness : ''})\r\n        this.setState({populationDifference : 0})\r\n        this.setState({minorityAnalyzed : ''})\r\n    }\r\n\r\n    render() {\r\n\r\n        const componentsAnimation = makeAnimated();\r\n        const minorityOptions = [\r\n            {\r\n              label: \"Ethnicity\",\r\n              options: [\r\n                { label:\"White\", value: \"WHITE_AMERICAN\"},\r\n                { label:\"African American\", value: \"AFRICAN_AMERICAN\"},\r\n                { label:\"Latino\", value: \"LATINO_AMERICAN\"},\r\n                { label:\"Asian\", value: \"ASIAN_AMERICAN\"},\r\n                { label:\"American Indian\", value: \"AMERICAN_INDIAN\"},\r\n                { label:\"Hawaiian\", value: \"HAWAIIAN_AMERICAN\"},\r\n                { label:\"Other\", value: \"OTHER_AMERICAN\"},\r\n              ]},\r\n          ];\r\n          const compactnessOptions = [\r\n            {\r\n              label: \"Measurement\",\r\n              options: [\r\n                { label:\"LOW\", value: \"0\"},\r\n                { label:\"MEDIUM\", value: \"50\"},\r\n                { label:\"HIGH\", value: \"100\"},\r\n              ]},\r\n          ];\r\n\r\n        return (\r\n            <Form> \r\n                <div className=\"form-group\">\r\n\r\n                {/* --------------------------------------- */}\r\n                {/*     NUMBER OF DISTRICT PLANS SLIDER     */}\r\n                {/* --------------------------------------- */}\r\n\r\n                    <label for=\"exampleInputEmail1\"> Districting Plans (#): </label>\r\n                    <div className=\"row\"> \r\n                        <div className=\"col-4\">\r\n                            <Form.Control size=\"sm\" value={this.state.plansAmount} onChange={this.changePlanAmount}/>\r\n                        </div>\r\n                        <div className=\"col-8\">\r\n                            <div className=\"rangeSliderContainer\"> \r\n                                <RangeSlider className=\"rangeSlider\" disabled={false} onChange={this.changePlanAmount} step={1} min={0} max={5000} tooltip='auto' value={this.state.plansAmount} />\r\n                                <div className = \"errorStyle\"> {this.state.plansAmountError} </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <small className=\"form-text text-muted\">Enter the amount of district plans you would like to generate. The current limit is 5000. </small>\r\n                    < br/>\r\n\r\n                {/* --------------------------------------- */}\r\n                {/*     POPULATION DIFFERENCE SLIDER        */}\r\n                {/* --------------------------------------- */}\r\n\r\n                    <label for=\"exampleInputEmail1\"> Population Difference Limit (%): </label>\r\n                    <div className=\"row\"> \r\n                        <div className=\"col-4\">\r\n                            <Form.Control size=\"sm\" value={this.state.populationDifference} onChange={this.changePopulationDifference}/>\r\n                        </div>\r\n                        <div className=\"col-8\">\r\n                            <div className=\"rangeSliderContainer\"> \r\n                                <RangeSlider className=\"rangeSlider\" disabled={false} onChange={this.changePopulationDifference} step={0.1} min={0} max={1.7} tooltip='auto' value={this.state.populationDifference} />\r\n                                <div className = \"errorStyle\"> {this.state.populationDifferenceError} </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <small className=\"form-text text-muted\"> Enter the limit as measured by the difference between the most populous district and the least populous district. </small>\r\n                    <br /> \r\n\r\n                {/* --------------------------------------- */}\r\n                {/*     COMPACTNESS MEASURE SLIDER          */}\r\n                {/* --------------------------------------- */}\r\n\r\n                    <label for=\"exampleInputEmail1\"> Compactness Preference: </label>\r\n                    <div className=\"compactnessStyle\">  \r\n                        <Select isSearchable={true} onChange={this.changeCompactness} value={this.state.compactness} placeholder = \"Compactness Measure\" components={componentsAnimation} className=\"basic-multi-select\" options={compactnessOptions} />\r\n                        <div className = \"errorStyle\"> {this.state.compactnessError} </div>\r\n                    </div>\r\n                    <small className=\"form-text text-muted\"> Enter the compactness preference for your district plans. </small>\r\n                    </div>\r\n\r\n                {/* --------------------------------------- */}\r\n                {/*        MINORITIES TO BE ANALYZED        */}\r\n                {/* --------------------------------------- */}\r\n\r\n                    <label > Minority Focus Group(s): </label>\r\n                    <div className=\"minorityFocusStyle\">\r\n                        <Select onChange={this.changeMinorityAnalyzed} value={this.state.minorityAnalyzed} isSearchable={true} placeholder=\"Minority group(s)\" components={componentsAnimation} className=\"basic-multi-select\" options={minorityOptions} isMulti={true} />\r\n                        <div className = \"errorStyle\"> {this.state.minorityAnalyzedError} </div>\r\n                    </div>\r\n                    <small className=\"form-text text-muted\"> Select the minority group(s) in the dropdown to particularly analyze. </small>\r\n                    <br />\r\n\r\n                {/* --------------------------------------- */}\r\n                {/*                JOB NAME                 */}\r\n                {/* --------------------------------------- */}\r\n\r\n                    <div className=\"form-group\">\r\n                        <label >Job Name:</label>\r\n                        <div className=\"customJobNameContainer\"> <input className=\"input-normal form-control\" maxlength={11} placeholder=\"Custom Job Name\" value={this.state.jobName} onChange={this.changeJobName} /> </div> \r\n                        <div className = \"errorStyle\"> {this.state.jobNameError} </div>\r\n                    </div>\r\n                    <br /> \r\n\r\n                {/* --------------------------------------- */}\r\n                {/*            GENERATE BUTTON              */}\r\n                {/* --------------------------------------- */}\r\n\r\n                    <button className=\"btn btn-primary\" onClick={this.handleGenerateJob} >Generate</button>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InputsJob;"]},"metadata":{},"sourceType":"module"}