{"ast":null,"code":"var _jsxFileName = \"/Users/danielhamam/Desktop/Computer_Programming/Broncos_Project/client/src/components/homePage/Main Panel/GraphDisplay/GraphDisplay.js\";\n// import Plot from 'react-plotly.js';\nimport React, { Component } from 'react';\nimport ModalGraph from './ModalGraph';\nimport CanvasJSReact from './canvasjs-3.0.5/canvasjs.react';\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart; // -----------------------------------------------------------\n// -----------------------------------------------------------\n// THIS CLASS IS NO LONGER NEEDED BUT KEPT HERE AS AN ARCHIVE\n// -----------------------------------------------------------\n// -----------------------------------------------------------\n\nclass GraphDisplay extends Component {\n  constructor() {\n    super(); // var graphTitle = \"Districting Plans\";\n\n    this.toggleModalGraph = () => {\n      // console.log(this.state.selectedFilters);\n      if (this.state.modalOpen == false) this.setState({\n        modalOpen: true\n      });else this.setState({\n        modalOpen: false\n      });\n    };\n\n    this.state = {\n      selectedFilters: null,\n      modalOpen: false,\n      graphOptions: {\n        animationEnabled: true,\n        theme: \"light2\",\n        title: {\n          text: \"VAP Filter vs. Indexed Districts\" // Existing plan v.s probabilistic plan - R. Kelly's words. Existing plan should \"overlap\" or be compared alongside with these district plans.\n\n        },\n        legend: {\n          horizontalAlign: \"right\",\n          verticalAlign: \"top\"\n        },\n        axisY: {\n          title: \"Voting Age Population (VAP) by Demographic Filter\"\n        },\n        axisX: {\n          title: \"Indexed Districts\"\n        },\n        data: [{\n          type: \"boxAndWhisker\",\n          legendText: \"Generated\",\n          showInLegend: true,\n          color: \"red\",\n          upperBoxColor: \"#A72A17\",\n          lowerBoxColor: \"#A3A3A3\",\n          yValueFormatString: \"###.0# \",\n          dataPoints: [{\n            label: \"1\",\n            y: [61, 65, 63.5, 70, 68]\n          }, {\n            label: \"2\",\n            y: [63, 68, 66.5, 76, 72]\n          }, {\n            label: \"3\",\n            y: [65, 71, 69.5, 78, 75]\n          }, {\n            label: \"4\",\n            y: [67, 73, 72, 80, 78]\n          }, {\n            label: \"5\",\n            y: [69, 76, 75, 83, 80]\n          }, {\n            label: \"6\",\n            y: [71, 78, 78, 85, 83]\n          }, {\n            label: \"7\",\n            y: [74, 81, 81, 87, 86]\n          }]\n        }, {\n          type: \"scatter\",\n          legendText: \"Enacted\",\n          showInLegend: true,\n          markerSize: 8,\n          color: \"#007BFF\",\n          toolTipContent: \"District Percentage: {y}\",\n          dataPoints: [{\n            x: 0,\n            y: 68\n          }, {\n            x: 1,\n            y: 71\n          }, {\n            x: 2,\n            y: 73\n          }, {\n            x: 3,\n            y: 74\n          }, {\n            x: 4,\n            y: 77\n          }, {\n            x: 5,\n            y: 80\n          }, {\n            x: 6,\n            y: 83\n          }]\n        }]\n      }\n    };\n  }\n\n  render() {\n    // if(this.state.selectedFilters != this.props.selectedFilters) {\n    //     this.setState({selectedFilters : this.props.selectedFilters});\n    // }\n    // Selected filters would be chosen from the map, and then passed to here. \n    // No need to have a dropdown allowing them to choose from \n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"graphDisplayWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      onClick: this.toggleModalGraph,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"plotView1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CanvasJSChart, {\n      options: this.state.graphOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ModalGraph, {\n      graphOptions: this.state.graphOptions,\n      toggleModal: this.toggleModalGraph,\n      showModal: this.state.modalOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, \" \")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }));\n  }\n\n}\n\nexport default GraphDisplay;","map":{"version":3,"sources":["/Users/danielhamam/Desktop/Computer_Programming/Broncos_Project/client/src/components/homePage/Main Panel/GraphDisplay/GraphDisplay.js"],"names":["React","Component","ModalGraph","CanvasJSReact","CanvasJS","CanvasJSChart","GraphDisplay","constructor","toggleModalGraph","state","modalOpen","setState","selectedFilters","graphOptions","animationEnabled","theme","title","text","legend","horizontalAlign","verticalAlign","axisY","axisX","data","type","legendText","showInLegend","color","upperBoxColor","lowerBoxColor","yValueFormatString","dataPoints","label","y","markerSize","toolTipContent","x","render"],"mappings":"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","sourcesContent":["// import Plot from 'react-plotly.js';\nimport React, {Component} from 'react';\nimport ModalGraph from './ModalGraph'\nimport CanvasJSReact from './canvasjs-3.0.5/canvasjs.react';\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\n\n// -----------------------------------------------------------\n// -----------------------------------------------------------\n// THIS CLASS IS NO LONGER NEEDED BUT KEPT HERE AS AN ARCHIVE\n// -----------------------------------------------------------\n// -----------------------------------------------------------\n\nclass GraphDisplay extends Component {\n    constructor () {\n        super();\n        // var graphTitle = \"Districting Plans\";\n        this.state = { \n            selectedFilters : null,\n            modalOpen : false,\n            graphOptions : {\n                animationEnabled: true,\n                theme: \"light2\",\n                title:{\n                    text: \"VAP Filter vs. Indexed Districts\" // Existing plan v.s probabilistic plan - R. Kelly's words. Existing plan should \"overlap\" or be compared alongside with these district plans.\n                },\n                legend:{\n                    horizontalAlign: \"right\",\n                    verticalAlign: \"top\",\n                },\n                axisY: {\n                    title: \"Voting Age Population (VAP) by Demographic Filter\",\n                },\n                axisX: {\n                    title: \"Indexed Districts\"\n                },\n                \n                data: [{\n                    type: \"boxAndWhisker\",\n                    legendText: \"Generated\",\n                    showInLegend: true,\n                    color: \"red\",\n                    upperBoxColor: \"#A72A17\",\n                    lowerBoxColor: \"#A3A3A3\",\n                    yValueFormatString: \"###.0# \",\n                    dataPoints: [\n                        { label: \"1\", y: [61, 65, 63.5, 70, 68] },\n                        { label: \"2\", y: [63, 68, 66.5, 76, 72] },\n                        { label: \"3\", y: [65, 71, 69.5, 78, 75] },\n                        { label: \"4\", y: [67, 73, 72, 80, 78] },\n                        { label: \"5\", y: [69, 76, 75, 83, 80] },\n                        { label: \"6\", y: [71, 78, 78,  85, 83] },\n                        { label: \"7\", y: [74, 81, 81, 87, 86] },\n                        \n                    ]\n                },\n                {\n                    type: \"scatter\",\n                    legendText: \"Enacted\",\n                    showInLegend: true,\n                    markerSize: 8,\n                    color: \"#007BFF\",\n                    toolTipContent: \"District Percentage: {y}\",\n                    dataPoints: [\n                        { x: 0, y: 68},\n                        { x: 1, y: 71},\n                        { x: 2, y: 73},\n                        { x: 3, y: 74},\n                        { x: 4, y: 77},\n                        { x: 5, y: 80},\n                        { x: 6, y: 83},\n                    ]\n                }]\n            },\n        }\n    }\n\n    toggleModalGraph = () => {\n        // console.log(this.state.selectedFilters);\n        if (this.state.modalOpen == false) this.setState({modalOpen : true});\n        else this.setState({modalOpen : false});\n    }\n\n    render() {         \n\n        // if(this.state.selectedFilters != this.props.selectedFilters) {\n        //     this.setState({selectedFilters : this.props.selectedFilters});\n        // }\n\n        // Selected filters would be chosen from the map, and then passed to here. \n        // No need to have a dropdown allowing them to choose from \n\n        return (\n            <div className=\"graphDisplayWrapper\"> \n                <div onClick={this.toggleModalGraph} >\n                    <div id=\"plotView1\"> \n                        <CanvasJSChart options = {this.state.graphOptions}/>\n                    </div>\n                </div>\n                <div>\n                    <ModalGraph graphOptions={this.state.graphOptions} toggleModal ={this.toggleModalGraph} showModal={this.state.modalOpen} > </ModalGraph>\n                </div>\n                    < br />\n                    < br />\n                    < br />\n            </div>\n        );\n    }\n}\n\nexport default GraphDisplay;\n"]},"metadata":{},"sourceType":"module"}