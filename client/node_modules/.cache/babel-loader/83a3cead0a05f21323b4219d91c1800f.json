{"ast":null,"code":"var _jsxFileName = \"/Users/kadiatoudiallo/Documents/GitHub/CSE-416-Project/client/src/components/homePage/Main Panel/DistrictingPlans/YourDistrictingPlans.js\";\nimport React, { Component } from 'react';\nimport DistrictPlan from './DistrictPlan'; // This class represents the list of Jobs. This will handle \"currently selected Job\" and \n// generally manage the jobs. \n\nclass YourDistrictingPlans extends Component {\n  constructor() {\n    super();\n\n    this.receiveDistricts = () => {\n      if (this.props.currentJob != \"\") {\n        return this.props.currentJob.districtPlans.map(districtPlan => /*#__PURE__*/React.createElement(DistrictPlan, {\n          plan: districtPlan,\n          type: districtPlan.type,\n          selectedPlanCheck: this.props.selectedPlanCheck,\n          toggleSelectedPlanCheck: this.props.toggleSelectedPlanCheck,\n          currentJob: this.props.currentJob,\n          deletePlan: this.props.deletePlan,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 17\n          }\n        }));\n      }\n    };\n\n    this.state = {\n      title: \"No Job Selected\"\n    };\n  }\n\n  render() {\n    if (this.props.currentJob == \"\" && this.state.title != \"No Job Selected\") {\n      this.setState({\n        title: \"No Job Selected\"\n      }); // if there is no job, then title is \"No Job Selected: \"\n    } else if (this.props.currentJob != \"\" && this.state.title != this.props.currentJob.jobName) {\n      this.setState({\n        title: this.props.currentJob.jobName\n      });\n    }\n\n    return (\n      /*#__PURE__*/\n      // Passing in parent variables to keep track of selection (so no more than 1 can be selected at once)\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }\n      }, \" Selected Plan: \"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }\n      }, \" \", this.state.title, \": \"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(DistrictPlan, {\n        plan: this.props.enactedPlan,\n        planName: this.props.enactedPlan.planName,\n        selectedPlanCheck: this.props.selectedPlanCheck,\n        toggleSelectedPlanCheck: this.props.toggleSelectedPlanCheck,\n        currentJob: this.props.currentJob,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }\n      })))\n    );\n  }\n\n}\n\nexport default YourDistrictingPlans;","map":{"version":3,"sources":["/Users/kadiatoudiallo/Documents/GitHub/CSE-416-Project/client/src/components/homePage/Main Panel/DistrictingPlans/YourDistrictingPlans.js"],"names":["React","Component","DistrictPlan","YourDistrictingPlans","constructor","receiveDistricts","props","currentJob","districtPlans","map","districtPlan","type","selectedPlanCheck","toggleSelectedPlanCheck","deletePlan","state","title","render","setState","jobName","enactedPlan","planName"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,YAAP,MAAyB,gBAAzB,C,CAEA;AACA;;AAEA,MAAMC,oBAAN,SAAmCF,SAAnC,CAA6C;AACzCG,EAAAA,WAAW,GAAI;AACX;;AADW,SAOfC,gBAPe,GAOI,MAAM;AAErB,UAAI,KAAKC,KAAL,CAAWC,UAAX,IAAyB,EAA7B,EAAiC;AAC7B,eAAO,KAAKD,KAAL,CAAWC,UAAX,CAAsBC,aAAtB,CAAoCC,GAApC,CAA0CC,YAAD,iBAC5C,oBAAC,YAAD;AAAc,UAAA,IAAI,EAAEA,YAApB;AAAkC,UAAA,IAAI,EAAEA,YAAY,CAACC,IAArD;AAA2D,UAAA,iBAAiB,EAAE,KAAKL,KAAL,CAAWM,iBAAzF;AACA,UAAA,uBAAuB,EAAE,KAAKN,KAAL,CAAWO,uBADpC;AAC6D,UAAA,UAAU,EAAE,KAAKP,KAAL,CAAWC,UADpF;AAEA,UAAA,UAAU,EAAE,KAAKD,KAAL,CAAWQ,UAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADG,CAAP;AAKH;AACJ,KAhBc;;AAEX,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH;;AAaDC,EAAAA,MAAM,GAAG;AAEL,QAAI,KAAKX,KAAL,CAAWC,UAAX,IAAyB,EAAzB,IAA+B,KAAKQ,KAAL,CAAWC,KAAX,IAAoB,iBAAvD,EAA0E;AACtE,WAAKE,QAAL,CAAc;AAACF,QAAAA,KAAK,EAAG;AAAT,OAAd,EADsE,CAC1B;AAC/C,KAFD,MAGK,IAAI,KAAKV,KAAL,CAAWC,UAAX,IAAyB,EAAzB,IAA+B,KAAKQ,KAAL,CAAWC,KAAX,IAAoB,KAAKV,KAAL,CAAWC,UAAX,CAAsBY,OAA7E,EAAsF;AACvF,WAAKD,QAAL,CAAc;AAACF,QAAAA,KAAK,EAAG,KAAKV,KAAL,CAAWC,UAAX,CAAsBY;AAA/B,OAAd;AACH;;AAED;AAAA;AACI;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFR,eAGQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHR,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAO,KAAKJ,KAAL,CAAWC,KAAlB,OAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,eAQI,oBAAC,YAAD;AAAc,QAAA,IAAI,EAAE,KAAKV,KAAL,CAAWc,WAA/B;AAA4C,QAAA,QAAQ,EAAE,KAAKd,KAAL,CAAWc,WAAX,CAAuBC,QAA7E;AAAuF,QAAA,iBAAiB,EAAE,KAAKf,KAAL,CAAWM,iBAArH;AACA,QAAA,uBAAuB,EAAE,KAAKN,KAAL,CAAWO,uBADpC;AAC6D,QAAA,UAAU,EAAE,KAAKP,KAAL,CAAWC,UADpF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,CADJ;AAFJ;AAwBH;;AApDwC;;AAuD7C,eAAeJ,oBAAf","sourcesContent":["import React, {Component} from 'react';\nimport DistrictPlan from './DistrictPlan';\n\n// This class represents the list of Jobs. This will handle \"currently selected Job\" and \n// generally manage the jobs. \n\nclass YourDistrictingPlans extends Component {\n    constructor () {\n        super();\n        this.state = {\n            title: \"No Job Selected\",\n        }\n    }\n\n    receiveDistricts = () => {\n\n        if (this.props.currentJob != \"\") {\n            return this.props.currentJob.districtPlans.map( (districtPlan) => \n                <DistrictPlan plan={districtPlan} type={districtPlan.type} selectedPlanCheck={this.props.selectedPlanCheck} \n                toggleSelectedPlanCheck={this.props.toggleSelectedPlanCheck} currentJob={this.props.currentJob}\n                deletePlan={this.props.deletePlan}\n                /> )\n        }\n    }\n\n    render() {\n\n        if (this.props.currentJob == \"\" && this.state.title != \"No Job Selected\") {\n            this.setState({title : \"No Job Selected\"}); // if there is no job, then title is \"No Job Selected: \"\n        } \n        else if (this.props.currentJob != \"\" && this.state.title != this.props.currentJob.jobName) {\n            this.setState({title : this.props.currentJob.jobName});\n        }\n\n        return (\n            // Passing in parent variables to keep track of selection (so no more than 1 can be selected at once)\n            <div>\n                <ul> \n                    <div> Selected Plan: </div> \n                        <br></br>\n                        <br></br>\n                    <div> {this.state.title}: </div>\n                    < br />\n\n                    {/* This is the enacted plan */}\n                    <DistrictPlan plan={this.props.enactedPlan} planName={this.props.enactedPlan.planName} selectedPlanCheck={this.props.selectedPlanCheck} \n                    toggleSelectedPlanCheck={this.props.toggleSelectedPlanCheck} currentJob={this.props.currentJob} />\n\n                    {/* {this.receiveDistricts()} */}\n\n                    {/* <DistrictPlan selectedPlanCheck={this.props.selectedPlanCheck} toggleSelectedPlanCheck={this.props.toggleSelectedPlanCheck} />\n                    <DistrictPlan selectedPlanCheck={this.props.selectedPlanCheck} toggleSelectedPlanCheck={this.props.toggleSelectedPlanCheck} />\n                    <DistrictPlan selectedPlanCheck={this.props.selectedPlanCheck} toggleSelectedPlanCheck={this.props.toggleSelectedPlanCheck} /> */}\n\n                </ul>\n            </div>\n            \n        );\n    }\n}\n\nexport default YourDistrictingPlans;"]},"metadata":{},"sourceType":"module"}